package TgsProtocol;

enum PacketDef
{
	// client - dir
	CLIENT2DIR_LOGIN_REQ					= 1234567;
	DIR2CLIENT_LOGIN_RET					= 7654321;


	/// =============================Client2Lobby   100000 -- 199999 ===============
	
	// login 100000
	CLIENT2LOBBY_LOGIN_REQ					= 100000;
	CLIENT2LOBBY_LOGIN_TOKEN_REQ			= 100001;
	CLIENT2LOBBY_CREATE_CHAR_REQ			= 100002;
	CLIENT2LOBBY_CHANGEFO_RMATION_REQ		= 100005;
	CLIENT2LOBBY_CHANGENAME_REQ				= 100006;
	CLIENT2LOBBY_BUY_COPPER_REQ				= 100007;
	CLIENT2LOBBY_CHANGEPHOTO_REQ			= 100008;
	CLIENT2LOBBY_SYN_ITEM_REQ				= 100009;
	CLIENT2LOBBY_SALE_ITEM_REQ				= 100010;
	CLIENT2LOBBY_TICK						= 100011;

	CLIENT2LOBBY_SIGNIN_REQ					= 100013;
	CLIENT2LOBBY_GET_VIPSIGNIN_REWARD_REQ	= 100014;
	CLIENT2LOBBY_AUTH_TOEKN_REQ				= 100015;
	CLIENT2LOBBY_CHANGEFO_RAISE_REQ			= 100016;
	CLIENT2LOBBY_PROGRESS_REQ				= 100017;
	CLIENT2LOBBY_AUTH_TOEKN2_REQ			= 100018;

	CLIENT2LOBBY_RESOLVEREQ					= 100019;
	CLIENT2LOBBY_RESOLVELOOK_REQ            = 100020;

	CLIENT2LOBBY_MONTHSIGNIN_REQ            = 100023;
	LOBBY2CLIENT_MONTHSIGNIN_RET            = 100024;

	CLIENT2LOBBY_AUTH_QUEUE_REQ				= 100025;
	LOBBY2CLIENT_AUTH_QUEUE_RET				= 100026;
	
	// chat 100100
	CLIENT2LOBBY_CHAT_INFO_NTF				= 100100;
	CLIENT2LOBBY_GETCHATRECORD_REQ			= 100021;
	CLIENT2LOBBY_HERO_DEIFICATION_REQ       = 100022;
	CLIENT2LOBBY_HERO_FORCE_REQ				= 100101;
	CLIENT2LOBBY_HERO_EVOLUTION_REQ			= 100102;
	CLIENT2LOBBY_EQUIP_FORCE_REQ			= 100103;
	CLIENT2LOBBY_SACRIFICE_REQ				= 100104;
	CLIENT2LOBBY_SALEHERO_REQ				= 100105;
	CLIENT2LOBBY_OPEN_BOX_REQ				= 100106;
	CLIENT2LOBBY_HEROSKILLUPGRADE_REQ		= 100107;
	CLIENT2LOBBY_GETOPENBOXINFO_REQ			= 100108;
	CLIENT2LOBBY_SKILLINFO_REQ				= 100109;
	CLIENT2LOBBY_BUY_SKILLPOINT_REQ			= 100110;
	CLIENT2LOBBY_USE_EXPITEM_REQ			= 100111;
	CLIENT2LOBBY_HERO_AWAKE_REQ             = 100112;
	CLIENT2LOBBY_HEROUPWINGS_REQ            = 100113;
	LOBBY2CLIENT_HEROUPWINGS_RET            = 100114;
	CLIENT2LOBBY_GETASTROLOGYHERO_REQ       = 100115;
	LOBBY2CLIENT_GETASTROLOGYHERO_RET       = 100116;
	// bag  100200
	CLIENT2LOBBY_MOVE_ITEM_REQ				= 100200;
	CLIENT2LOBBY_LOAD_BAG_REQ				= 100201;
    CLIENT2LOBBY_OPEN_BAG_REQ				= 100202;
    CLIENT2LOBBY_USE_PROP_REQ               = 100203;
	CLIENT2LOBBY_GETSHOPINFO_REQ            = 100204;
	CLIENT2LOBBY_BUYGOODS_REQ               = 100205;
	CLIENT2LOBBY_REFRESHSHOP_REQ            = 100206;

	// quest
	CLIENT2LOBBY_COMMIT_QUEST_REQ			= 100300;
	CLIENT2LOBBY_ACCEPT_QUEST_NTF			= 100301;
	CLIENT2LOBBY_NPC_TALK_REQ				= 100302;
	CLIENT2LOBBY_GIVEUP_QUEST_REQ			= 100303;
	CLIENT2LOBBY_COMMIT_QUEST_ALL_REQ		= 100304;

	// instance
	CLIENT2LOBBY_CHALLENGE_INSTANCE_REQ		= 100500;
	CLIENT2LOBBY_CHALLENGE_RESULT			= 100501;
	CLIENT2LOBBY_KILL_MONSTER_NTF			= 100502;
	CLIENT2LOBBY_FLOP_REQ					= 100503;
	CLIENT2LOBBY_GET_CHAPTERREWARD_REQ		= 100504;
	CLIENT2LOBBY_REVIVE_REQ					= 100505;
	CLIENT2LOBBY_RESETEVALUATIONTIMES_REQ	= 100506;
	// mail
	CLIENT2LOBBY_READMAIL_REQ				= 100600;
	CLIENT2LOBBY_DELMAIL_REQ                = 100601;
	LOBBY2CLIENT_DELMAIL_RET                = 100602;

	// expedition
	CLIENT2LOBBY_EXPEDITION_RESULT			= 100611;
	CLIENT2LOBBY_RESET_EXPEDITION_REQ		= 100613;

	CLIENT2LOBBY_GET_ARENAINFO_REQ			= 100614;
	CLIENT2LOBBY_CHALLENGE_ARENA_REQ		= 100615;
	CLIENT2LOBBY_CHALLENGE_ARENA_RESULT		= 100616;
	CLIENT2LOBBY_RESET_ARENA_REQ			= 100617;
	CLIENT2LOBBY_CHANGE_ARENA_DEFENCE_REQ	= 100618;
	CLIENT2LOBBY_ARENAFASTFIGHT_REQ         = 100608;

	CLIENT2LOBBY_GET_FRIENDINFO_REQ			= 100620;
	CLIENT2LOBBY_ADD_FRIEND_REQ				= 100621;
	CLIENT2LOBBY_DEL_FRIEND_REQ				= 100622;
	CLIENT2LOBBY_OP_APPLYLIST_REQ			= 100623;
	CLIENT2LOBBY_ADD_BLACKLIST_REQ			= 100624;
	CLIENT2LOBBY_ENERGYONCE_REQ				= 100625;
	CLIENT2LOBBY_ENERGYALL_REQ				= 100626;
	CLIENT2LOBBY_GET_TARGET_FRIENDINFO_REQ	= 100627;

	CLIENT2LOBBY_EQUIP_REQ					= 100631;
	CLIENT2LOBBY_UNEQUIP_REQ				= 100632;
	CLIENT2LOBBY_STRENG_EQUIP_REQ			= 100633;
	CLIENT2LOBBY_REFINE_EQUIP_REQ			= 100634;
	CLIENT2LOBBY_SALE_EQUIP_REQ				= 100635;
	CLIENT2LOBBY_SHOP_BUY_GOODS_REQ			= 100636;
	CLIENT2LOBBY_STRENG_TREASURE_REQ        = 100637;
	CLIENT2LOBBY_REFINE_TREASURE_REQ        = 100638;
	CLIENT2LOBBY_CHANGEEQUIP_REQ            = 100639;

	CLIENT2LOBBY_GETACTIVITYDATA_REQ		= 100640;
	CLIENT2LOBBY_GETACTIVITYREWARD_REQ		= 100641;
	CLIENT2LOBBY_BUYREBATE_REQ      		= 100643;
	CLIENT2LOBBY_GETRANKDATA_REQ		    = 100650;
    CLIENT2LOBBY_GETRANKFIVEHERO_REQ        = 100651;
    CLIENT2LOBBY_GETRANKWEAPON_REQ          = 100652;
    CLIENT2LOBBY_GETRANKHERO_REQ            = 100653;

	CLIENT2LOBBY_GETACHIEVE_REQ             = 100660;
	CLIENT2LOBBY_GETACHIEVEREWARD_REQ       = 100661;

	CLIENT2LOBBY_GETNEARBYPLAYERS_REQ       = 100666;
	CLIENT2LOBBY_PUTFASHION_REQ				= 100670;

	CLIENT2LOBBY_EVOLVEEQUIP_REQ            = 100680;
	LOBBY2CLIENT_EVOLVEEQUIP_RET            = 100681;
	CLIENT2LOBBY_AWAKEEQUIP_REQ             = 100682;
	LOBBY2CLIENT_AWAKEEQUIP_RET             = 100683; 
	/// =============================Lobby2Client   200000 -- 299999 ==================
	
	// login 200000
	LOBBY2CLIENT_LOGIN_FAILED				= 200000;
    LOBBY2CLIENT_CREATE_CHARACTER_CMD		= 200001;
    LOBBY2CLIENT_CREATE_CHAR_FAILED			= 200002;
    LOBBY2CLIENT_CHARACTER_INFO_NTF			= 200003;
    LOBBY2CLIENT_CHAR_BASEINFO_UPDATE		= 200004;
	LOBBY2CLIENT_CHANGE_FORMATION_RET		= 200005;
	LOBBY2CLIENT_CHANGENAME_RET				= 200006;
	LOBBY2CLIENT_BUY_COPPER_RET				= 200007;
	LOBBY2CLIENT_CHANGEPHOTO_RET			= 200008;
	LOBBY2CLIENT_SYN_ITEM_RET				= 200009;
	LOBBY2CLIENT_SALE_ITEM_RET				= 200010;
	LOBBY2CLIENT_HEROINFO_UPDATE			= 200011;
	LOBBY2CLIENT_KICK_NTF					= 200012;
	
	LOBBY2CLIENT_SIGNIN_INFO_NTF			= 200013;
	LOBBY2CLIENT_SIGNIN_RET					= 200014;
	LOBBY2CLIENT_GET_VIPSIGNIN_REWARD_RET	= 200015;
	LOBBY2CLIENT_CHANGE_RAISE_RET			= 200016;
	LOBBY2CLIENT_PROGRESS_RET				= 200017;
	LOBBY2CLIENT_LOGINDATACOMPLETE_NTF		= 200018;

	LOBBY2CLIENT_RESOLVERET					= 200019;
	LOBBY2CLIENT_HERODELETE_NTF             = 200020;
	LOBBY2CLIENT_RESOLVELOOK_RET            = 200021;

	// chat 20100
	LOBBY2CLIENT_CHAT_RECORD_NTF			= 200099;
	LOBBY2CLIENT_CHAT_INFO_NTF				= 200100;
	
	LOBBY2CLIENT_HERO_EVOLUTION_RET			= 200101;
	LOBBY2CLIENT_HERO_FORCE_RET				= 200102;
	LOBBY2CLIENT_HERO_DEIFICATION_RET       = 200098;
	LOBBY2CLIENT_EQUIP_FORCE_RET			= 200103;
	LOBBY2CLIENT_SALEHERO_RET				= 200104;
	LOBBY2CLIENT_OPEN_BOX_RET				= 200105; 
	LOBBY2CLIENT_SUPREMEHOTBOX_NTF			= 200106;
	LOBBY2CLIENT_HEROSKILLUPGRADE_RET		= 200107;
	LOBBY2CLIENT_GRTOPENBOXINFO_RET			= 200108;
	LOBBY2CLIENT_SKILLINFO_RET				= 200109;
	LOBBY2CLIENT_BUY_SKILLPOINT_RET			= 200110;
	LOBBY2CLIENT_USE_EXPITEM_RET			= 200111;
	LOBBY2CLIENT_ANNOUNCEMENT_NTF			= 200112;
	LOBBY2CLIENT_HERO_AWAKE_RET				= 200113;
	// bag 20200
	LOBBY2CLIENT_SEND_THINGS_NTF			= 200200;
	LOBBY2CLIENT_REDUCE_THINGS_NTF			= 200201;
	LOBBY2CLIENT_MOVE_ITEM_NTF				= 200202;
    LOBBY2CLIENT_SWAP_ITEM_NTF              = 200203;
    LOBBY2CLIENT_OVERLAP_ITEM_NTF           = 200204;
    LOBBY2CLIENT_LOAD_BAG_RET				= 200205;
	LOBBY2CLIENT_GETSHOPINFO_RET			= 200206;
	LOBBY2CLIENT_BUYGOODS_RET				= 200207;
	LOBBY2CLIENT_REFRESHSHOP_RET			= 200208;
	LOBBY2CLIENT_SHOPACTIVITY_NTF			= 200209;
	

	// quest 200300
	LOBBY2CLIENT_COMMIT_QUEST_RET			= 200300;
	LOBBY2CLIENT_NEW_QUEST_NTF				= 200301;
	LOBBY2CLIENT_QUEST_FIN_STATUS			= 200302;
	LOBBY2CLIENT_QUEST_OBJ_NTF				= 200303;
	LOBBY2CLIENT_REMOVE_QUEST				= 200304;
	LOBBY2CLIENT_NEW_SIDE_QUEST_NTF			= 200305;
	LOBBY2CLIENT_COMMIT_QUEST_ALL_RET		= 200306;

	LOBBY2CLIENT_FESTIVITY_NTF				= 200310;	// »î¶¯
	LOBBY2CLIENT_NEWDAYUPDATE_NTF           = 200320;

	// instance
	LOBBY2CLIENT_CHALLENGE_INSTANCE_RET		= 200500;
	LOBBY2CLIENT_CHALLENGE_RESULT			= 200501;
	LOBBY2CLIENT_FLOP_RET					= 200502;
	LOBBY2CLIENT_GET_CHAPTERREWARD_RET		= 200503;
	LOBBY2CLIENT_GET_ARCHAEOLOGYINFO_RET	= 200504;
	LOBBY2CLIENT_REVIVE_RET					= 200505;
	LOBBY2CLIENT_SACRIFICE_RET				= 200506;
	LOBBY2CLIENT_RESETEVALUATIONTIMES_RET	= 200507;
	
	// mail
	LOBBY2CLIENT_MAIL_LIST					= 200600;
	LOBBY2CLIENT_NEW_MAIL_NTF				= 200601;
	LOBBY2CLIENT_READMAIL_RET				= 200602;
	LOBBY2CLIENT_DELMAIL_NTF				= 200603;
	// expedition
	LOBBY2CLIENT_EXPEDITIONRESULT_RET		= 200604;
	LOBBY2CLIENT_GETEXPEDITIONREWARD_RET	= 200605;
	LOBBY2CLIENT_RESET_EXPEDITION_RET		= 200606;
		
	//arena
	LOBBY2CLIENT_GET_ARENAINFO_RET			= 200613;
	LOBBY2CLIENT_CHALLENGE_ARENA_RET		= 200614;
	LOBBY2CLIENT_CHALLENGE_ARENA_REWARD		= 200615;
	LOBBY2CLIENT_RESET_ARENA_RET			= 200616;
	LOBBY2CLIENT_CHANGE_ARENA_DEFENCE_RET	= 200617;
	LOBBY2CLIENT_ARENAFASTFIGHT_RET         = 200608;

		// friend
	LOBBY2CLIENT_FRIENDLIST_RET				= 200620;
	LOBBY2CLIENT_ADD_FRIEND_RET				= 200621;
	LOBBY2CLIENT_DEL_FRIEND_RET				= 200622;
	LOBBY2CLIENT_OP_APPLYLIST_RET			= 200623;
	LOBBY2CLIENT_ADD_BLACKLIST_RET			= 200624;
	LOBBY2CLIENT_ENERGYONCE_RET				= 200625;
	LOBBY2CLIENT_ENERGYALL_RET				= 200626;
	LOBBY2CLIENT_NEW_APPLY_NTF				= 200627;
	LOBBY2CLIENT_NEW_FRIEND_NTF				= 200628;
	LOBBY2CLIENT_DEL_FRIEND_NTF				= 200629;
	LOBBY2CLIENT_GET_TARGET_FRIENDINFO_RET	= 200630;

	LOBBY2CLIENT_EQUIP_RET					= 200631;
	LOBBY2CLIENT_UNEQUIP_RET				= 200632;
	LOBBY2CLIENT_STRENG_EQUIP_RET			= 200633;
	LOBBY2CLIENT_REFINE_EQUIP_RET			= 200634;
	LOBBY2CLIENT_SALE_EQUIP_RET				= 200635;
	LOBBY2CLIENT_SHOP_BUY_GOODS_RET			= 200636;
	LOBBY2CLIENT_STRENG_TREASURE_RET        = 200637;
	LOBBY2CLIENT_REFINE_TREASURE_RET        = 200638;
	LOBBY2CLIENT_CHANGEEQUIP_RET            = 200639;

	LOBBY2CLIENT_GETACTIVITYDATA_RET		= 220640;
	LOBBY2CLIENT_GETACTIVITYREWARD_RET		= 220641;
	LOBBY2CLIENT_UPDATEACTIVITYDATA_NTF		= 220642;
	LOBBY2CLIENT_BUYREBATE_RET              = 220643;
	LOBBY2CLIENT_GETRANKDATA_RET		    = 220650;
    LOBBY2CLIENT_GETRANKFIVEHERO_RET        = 220651;
    LOBBY2CLIENT_GETRANKWEAPON_RET          = 220652;
    LOBBY2CLIENT_GETRANKHERO_RET            = 220653;

	LOBBY2CLIENT_GETACHIEVE_RET             = 220660;
	LOBBY2CLIENT_GETACHIEVEREWARD_RET       = 220661;

	LOBBY2CLIENT_GETNEARBYPLAYERS_RET       = 220666;
	LOBBY2CLIENT_PUTFASHION_RET				= 220670;

	//======= between lobby & client
	CLIENT2LOBBY_GET_TARGET_USERINFO_REQ	= 210000;
	LOBBY2CLIENT_GET_TARGET_USERINFO_RET	= 210001;
	LOBBY2CLIENT_GLOBAL_NTF					= 210002;
	CLIENT2LOBBY_GET_SEVEN_REWARD_REQ		= 210003;
	LOBBY2CLIENT_GET_SEVEN_REWARD_RET		= 210004;
	LOBBY2CLIENT_SEVEN_NTF					= 210005;
	LOBBY2CLIENT_HEART_NTF					= 210006;
	CLIENT2LOBBY_HEART_REP					= 210007;
	CLIENT2LOBBY_SEVEN_HALF_BUY_REQ			= 210008;
	LOBBY2CLIENT_SEVEN_HALF_BUY_RET			= 210009;
    CLIENT2LOBBY_BUYMAPTIMES_REQ            = 210011;
	LOBBY2CLIENT_BUYMAPTIMES_RET			= 210012;
	CLIENT2LOBBY_REBEL_ARMY_BATTLE_START_REQ = 210013;
	LOBBY2CLIENT_REBEL_ARMY_BATTLE_START_RET = 210014;
	CLIENT2LOBBY_REBEL_ARMY_BATTLE_END_REQ  = 210015;
	LOBBY2CLIENT_REBEL_ARMY_BATTLE_END_RET  = 210016;
	CLIENT2LOBBY_REBEL_ARMY_BOSS_REQ 		= 210017;
	LOBBY2CLIENT_REBEL_ARMY_BOSS_RET 		= 210018;
	CLIENT2LOBBY_REBEL_ARMY_BOSS_SHARE_REQ  = 210019;
	LOBBY2CLIENT_REBEL_ARMY_BOSS_SHARE_RET  = 210020;
	LOBBY2CLIENT_GET_TARGET_USERINFO_REQ	= 210021;	
	CLIENT2LOBBY_GET_TARGET_USERINFO_RET	= 210022;	
	LOBBY2CLIENT_RECOMMAND_FRIENDLIST_RET	= 210023;	
	CLIENT2LOBBY_RECOMMAND_FRIENDLIST_REQ	= 210024;	
	LOBBY2CLIENT_FRIENDINFO_NTF				= 210025;
	CLIENT2LOBBY_GET_RAID_TEAM_REQ			= 210026;
	LOBBY2CLIENT_GET_RAID_TEAM_RET			= 210027;
	CLIENT2LOBBY_OPT_RAID_TEAM_REQ			= 210028;
	LOBBY2CLIENT_OPT_RAID_TEAM_RET			= 210029;
	LOBBY2CLIENT_ACTION_RECORD_NTF			= 210030;
	LOBBY2CLIENT_RECHARGE_NTF				= 210031;
	CLIENT2LOBBY_CREATE_RAID_TEAM_REQ		= 210032;
	LOBBY2CLIENT_CREATE_RAID_TEAM_RET		= 210033;
	LOBBY2CLIENT_SHARE_NTF					= 210034;
	LOBBY2CLIENT_RAID_TEAM_NTF				= 210035;
	CLIENT2LOBBY_FRIEND_APPLY_INFO_REQ      = 210036;

	CLIENT2LOBBY_GETGUILDLIST_REQ           = 210040;
	LOBBY2CLIENT_GETGUILDLIST_RET           = 210041;
	CLIENT2LOBBY_CREATEGUILD_REQ            = 210042;
	LOBBY2CLIENT_CREATEGUILD_RET            = 210043;
	CLIENT2LOBBY_APPLYGUILD_REQ             = 210044;
	LOBBY2CLIENT_APPLYGUILD_RET             = 210045;
	CLIENT2LOBBY_APPLyGUILDRESPOND_REQ      = 210046;
	LOBBY2CLIENT_APPLYGUILDRESPOND_RET      = 210047;
	CLIENT2LOBBY_GETGUILDAPPLYLIST_REQ      = 210048;
	LOBBY2CLIENT_GETGUILDAPPLYLIST_RET      = 210049;
	CLIENT2LOBBY_QUITGUILD_REQ              = 210050;
	LOBBY2CLIENT_QUITGUILD_RET              = 210051;
	CLIENT2LOBBY_OPERATEGUILDMEMBER_REQ     = 210052;
	LOBBY2CLIENT_OPERATEGUILDMEMBER_RET     = 210053;
	CLIENT2LOBBY_MODIFYGUILDTEXT_REQ        = 210054;
	LOBBY2CLIENT_MODIFYGUILDTEXT_RET        = 210055;
	CLIENT2LOBBY_GETGUILDMEMBERLIST_REQ     = 210056;
	LOBBY2CLIENT_GETGUILDMEMBERLIST_RET     = 210057;
	LOBBY2CLIENT_GUILDINFO_NTF              = 210059;
	LOBBY2CLIENT_GUILDMEMBER_NTF            = 210060;
	LOBBY2CLIENT_GUILDAPPLY_NTF             = 210061;
	CLIENT2LOBBY_GUILDRITUAL_REQ            = 210062;
	LOBBY2CLIENT_GUILDRITUAL_RET            = 210063;
	CLIENT2LOBBY_GETGUILDRITUALRATEREWARD_REQ=210064;
	LOBBY2CLIENT_GETGUILDRITUALRATEREWARD_RET=210065;
	CLIENT2LOBBY_GETGUILDRITUAL7DAYREWARD_REQ=210066;
	LOBBY2CLIENT_GETGUILDRITUAL7DAYREWARD_RET=210067;
	LOBBY2CLIENT_GUILDRITUAL_NTF            = 210068;
	CLIENT2LOBBY_GETGUILDSTATE_REQ          = 210069;
	LOBBY2CLIENT_GETGUILDSTATE_RET          = 210070;
	LOBBY2CLIENT_GUILDSTATE_NTF             = 210071;
	CLIENT2LOBBY_GET_PRIZE_REQ				= 210072;	
	LOBBY2CLIENT_GET_PRIZE_RET				= 210073;
	LOBBY2CLIENT_PRIZEINFO_NTF				= 210074;

	LOBBY2CLIENT_GUILDMAPINFO_NTF           = 210080;
	CLIENT2LOBBY_SELECTGUILDCHAPTER_REQ     = 210081;
	LOBBY2CLIENT_SELECTGUILDCHAPTER_RET     = 210082;
	CLIENT2LOBBY_ATTACKGUILDMAP_REQ         = 210083;
	LOBBY2CLIENT_ATTACKGUILDMAP_RET         = 210084;
	CLIENT2LOBBY_GETGUILDMAPREWARDLIST_REQ  = 210085;
	LOBBY2CLIENT_GETGUILDMAPREWARDLIST_RET  = 210086;
	CLIENT2LOBBY_ATTACKGUILDMAPRESULT_REQ   = 210087;
	LOBBY2CLIENT_ATTACKGUILDMAPRESULT_RET   = 210088;
	CLIENT2LOBBY_SHOWGUILDMAPREWARDLIST_REQ = 210089;
	LOBBY2CLIENT_SHOWGUILDMAPREWARDLIST_RET = 210090;
	CLIENT2LOBBY_RESETGUILDMAPTYPE_REQ      = 210091;
	LOBBY2CLIENT_RESETGUILDMAPTYPE_RET      = 210092;

	CLIENT2LOBBY_GETGUILDTERRITORYBATTLEPLAYER_REQ=210128;
	LOBBY2CLIENT_GETGUILDTERRITORYBATTLEPLAYER_RET=210129;
	CLIENT2LOBBY_GETGUILDTERRITORYINFO_REQ  = 210130;
	LOBBY2CLIENT_GETGUILDTERRITORYINFO_RET  = 210131;
	CLIENT2LOBBY_ATTACKGUILDTERRITORYRESULT_REQ=210132;
	LOBBY2CLIENT_ATTACKGUILDTERRITORYRESULT_RET=210133;
	CLIENT2LOBBY_PATROLGUILDTERRITORY_REQ   = 210134;
	LOBBY2CLIENT_PATROLGUILDTERRITORY_RET   = 210135;
	CLIENT2LOBBY_GETGUILDTERRITORYREWARD_REQ= 210136;
	LOBBY2CLIENT_GETGUILDTERRITORYREWARD_RET= 210137;
	CLIENT2LOBBY_GETGUILDMEMBERSTERRITORYLIST_REQ=210138;
	LOBBY2CLIENT_GETGUILDMEMBERSTERRITORYLIST_RET=210139;
	CLIENT2LOBBY_GETGUILDMEMBERTERRITORYINFO_REQ= 210140;
	LOBBY2CLIENT_GETGUILDMEMBERTERRITORYINFO_RET= 210141;
	CLIENT2LOBBY_SUPPRESSGUILDMEMBERTERRITORY_REQ=210142;
	LOBBY2CLIENT_SUPPRESSGUILDMEMBERTERRITORY_RET=210143;
	LOBBY2CLIENT_GUILDTERRITORYRRIOTDONE_NTF = 210144;
	CLIENT2LOBBY_UNLOCKGUILDSKILL_REQ       = 210150;
	LOBBY2CLIENT_UNLOCKGUILDSKILL_RET       = 210151;
	CLIENT2LOBBY_UPGUILDSKILL_REQ           = 210152;
	LOBBY2CLIENT_UPGUILDSKILL_RET           = 210153;
	CLIENT2LOBBY_GETGUILDWARENEMYLIST_REQ   = 210154;
	LOBBY2CLIENT_GETGUILDWARENEMYLIST_RET   = 210155;
	CLIENT2LOBBY_SELECTGUILDWARENEMY_REQ    = 210156;
	LOBBY2CLIENT_SELECTGUILDWARENEMY_RET    = 210157;
	CLIENT2LOBBY_GETGUILDWARINFO_REQ        = 210158;
	LOBBY2CLIENT_GETGUILDWARINFO_RET        = 210159;
	CLIENT2LOBBY_SHOWGUILDWARENEMYMEMBERS_REQ=210160;
	LOBBY2CLIENT_SHOWGUILDWARENEMYMEMBERS_RET=210161;
	CLIENT2LOBBY_ATTACKGUILDWARENEMY_REQ    = 210162;
	LOBBY2CLIENT_ATTACKGUILDWARENEMY_RET    = 210163;
	CLIENT2LOBBY_ATTACKGUILDWARENEMYRESULT_REQ=210164;
	LOBBY2CLIENT_ATTACKGUILDWARENEMYRESULT_RET=210165;
	LOBBY2CLIENT_GUILDWARMSG_NTF            = 210166;
	LOBBY2CLIENT_GUILDWARENDMSG_NTF         = 210167;
	LOBBY2CLIENT_GUILDWARENDPLAYERMSG_NTF   = 210168;
	LOBBY2CLIENT_GUILDTECHNOLOGY_NTF        = 210169;

	LOBBY2CLIENT_GUILDCITYINFO_NTF          = 210171;
	LOBBY2CLIENT_GUILDCITYTASKINFO_NTF      = 210172;
	LOBBY2CLIENT_GUILDCITYTASKUPDATE_NTF    = 210173;
	CLIENT2LOBBY_GETGUILDCITYTASKREWARD_REQ = 210174;
	LOBBY2CLIENT_GETGUILDCITYTASKREWARD_RET = 210175;
	CLIENT2LOBBY_REFRESHGUILDCITYTASK_REQ   = 210176;
	LOBBY2CLIENT_REFRESHGUILDCITYTASK_RET   = 210177;

	CLIENT2LOBBY_USE_ITEM_SPECAIL_REQ		= 210099;
	LOBBY2CLIENT_USE_ITEM_SPECAIL_RET		= 210100;
	CLIENT2LOBBY_ROBPLAYER_REQ				= 210101;	
	CLIENT2LOBBY_ROB_TREASURE_BATTLE_START_REQ	= 210102;
	CLIENT2LOBBY_ROB_TREASURE_BATTLE_END_REQ	= 210103;
	CLIENT2LOBBY_TREASURE_COMBINE_REQ		= 210104;
	CLIENT2LOBBY_ROB_OPEN_BOX_REQ			= 210105;
	LOBBY2CLIENT_ROBPLAYER_RET				= 210106;
	LOBBY2CLIENT_ROB_TREASURE_BATTLE_START_RET	= 210107;
	LOBBY2CLIENT_ROB_TREASURE_BATTLE_END_RET	= 210108;
	LOBBY2CLIENT_TREASURE_COMBINE_RET		= 210109;
	LOBBY2CLIENT_ROB_OPEN_BOX_RET			= 210110;
	CLIENT2LOBBY_ONEKEYROB_REQ              = 210111;
	LOBBY2CLIENT_ONEKEYROB_RET              = 210112;
	CLIENT2LOBBY_ONEKEYROBEND_REQ           = 210113;
	LOBBY2CLIENT_ONEKEYROBEND_RET           = 210114;

	LOBBY2CLIENT_NOTICE_NTF                 = 210120;
	CLIENT2LOBBY_GETNOTICEITEM_REQ          = 210121;
	LOBBY2CLIENT_GETNOTICEITEM_RET          = 210122;
	LOBBY2CLIENT_NOTICEBYTASK_NTF 			= 210123;
	LOBBY2CLIENT_REFERSHTIMES_NTF           = 210200;
	CLIENT2LOBBY_BUYPRICETIMES_REQ          = 210201;
	LOBBY2CLIENT_BUYPRICETIMES_RET          = 210202;
	CLIENT2LOBBY_UPPOSITION_REQ             = 210203;
	LOBBY2CLIENT_UPPOSITION_RET             = 210204;
	LOBBY2CLIENT_GETFIRSTWEAPON_NTF         = 210205;

	CLIENT2LOBBY_GETROBOTEFFECT_REQ         = 200210;
	LOBBY2CLIENT_GetRobotEffect_RET         = 200211;
	CLIENT2LOBBY_FIRSTCHARGECHOOSE_REQ      = 200220;
	LOBBY2CLIENT_FIRSTCHARGECHOOSE_RET      = 200221;

	CLIENT2LOBBY_CONTINUE_CHARGE_CHOOSE_REQ		= 200230;
	LOBBY2CLIENT_CONTINUE_CHARGE_CHOOSE_RET		= 200231;

	CLIENT2LOBBY_REBEL_ARMY_BOSS_TIP_REQ 	= 210300;
	LOBBY2CLIENT_REBEL_ARMY_BOSS_TIP_RET 	= 210301;

	CLIENT2LOBBY_GETEXPEDITIONROBOT_REQ     = 210310;
	LOBBY2CLIENT_GETEXPEDITIONROBOT_RET     = 210311;
	CLIENT2LOBBY_GETEXPEDITIONBATTLEPLAYER_REQ= 210312;
	LOBBY2CLIENT_GETEXPEDITIONBATTLEPLAYER_RET= 210313;

	CLIENT2LOBBY_GETSEVENDAYRANK_REQ        = 210314;
	LOBBY2CLIENT_GETSEVENDAYRANK_RET        = 210315;
	CLIENT2LOBBY_GETPKBATTLEPLAYER_REQ      = 210316;
	LOBBY2CLIENT_GETPKBATTLEPLAYER_RET      = 210317;
	LOBBY2CLIENT_TEAMEFFECT_NTF             = 210318;
	LOBBY2CLIENT_CONTINUE_CHARGE_NTF        = 210320;

	LOBBY2CLIENT_TURNTABLERESULT_NTF        = 210330;     
	CLIENT2LOBBY_GETTURNTABLERANK_REQ       = 210331;
	LOBBY2CLIENT_GETTURNTABLERANK_RET       = 210332;
	LOBBY2CENTER_CLOSETURNTABLERANK_NTF     = 210333;
	CENTER2LOBBY_TURNTABLERANKREWARD_NTF    = 210334;
	CENTER2LOBBY_GETARENALIST_REQ           = 310335;
	LOBBY2CENTER_GETARENALIST_RET           = 310336;
	CLIENT2LOBBY_INVITEFRIENDTEAM_REQ       = 310337;

	CLIENT2LOBBY_SERVERWARGETSCOREINFO_REQ  = 210350;
	LOBBY2CLIENT_SERVERWARGETSCOREINFO_RET  = 210351;
	CLIENT2LOBBY_SERVERWARSETCOUNTRY_REQ    = 210352;
	LOBBY2CLIENT_SERVERWARSETCOUNTRY_RET    = 210353;
	CLIENT2LOBBY_SERVERWARREFRESHENEMY_REQ  = 210354;
	LOBBY2CLIENT_SERVERWARREFRESHENEMY_RET  = 210355;
	CLIENT2LOBBY_SERVERWARATTACKRESULT_REQ  = 210356;
	LOBBY2CLIENT_SERVERWARATTACKRESULT_RET  = 210357;
	CLIENT2LOBBY_SERVERWARGETSCORERANK_REQ  = 210358;
	LOBBY2CLIENT_SERVERWARGETSCORERANK_RET  = 210359;
	CLIENT2LOBBY_SERVERWARGETFIGHTRANK_REQ  = 210360;
	LOBBY2CLIENT_SERVERWARGETFIGHTRANK_RET  = 210361;   
	CLIENT2LOBBY_SERVERWARATTACK_REQ        = 210362;
	LOBBY2CLIENT_SERVERWARATTACK_RET        = 210363;
	CLIENT2LOBBY_SERVERWARGETFIGHTINFO_REQ  = 210364;
	LOBBY2CLIENT_SERVERWARGETFIGHTINFO_RET  = 210365;
	CENTER2LOBBY_SERVERWARRANKREWARD_NTF    = 210366;
	LOBBY2CENTER_CLOSESWAR_NTF              = 210367;
	LOBBY2CENTER_UPDATETEAMHONOR_NTF        = 210368;
	CENTER2LOBBY_SERVERTEAMRANKREWARD_NTF   = 210369;

	CLIENT2LOBBY_SERVERTEAMOP_REQ           = 210370;
	LOBBY2CLIENT_SERVERTEAMOP_RET           = 210371;
	CLIENT2LOBBY_SERVERTEAMCLOSE_REQ        = 210372;
	LOBBY2CLIENT_SERVERTEAMCLOSE_NTF        = 210373;
	LOBBY2CLIENT_SERVERTEAMPLAYERS_NTF      = 210374;
	CLIENT2LOBBY_SERVERTEAMINVITEFRIEND_REQ = 210375;
	LOBBY2CLIENT_SERVERTEAMINVITEFRIEND_RET = 210376;
	LOBBY2CLIENT_SERVERTEAMINVITED_NTF      = 210377;
	CLIENT2LOBBY_SERVERTEAMCHANGEPOS_REQ    = 210378;
	LOBBY2CLIENT_SERVERTEAMCHANGEPOS_NTF    = 210379;
	LOBBY2CLIENT_SERVERTEAMWAITFIGHT_NTF    = 210380;
	LOBBY2CLIENT_SERVERTEAMFIGHTRESULT_NTF  = 210381;
	LOBBY2CLIENT_SERVERTEAMQUIT_NTF         = 210382;
	LOBBY2CLIENT_SERVERTEAMDOREADY_NTF      = 210383;
	CLIENT2LOBBY_SERVERTEAMGETHONORRANK_REQ = 210384;
	LOBBY2CLIENT_SERVERTEAMGETHONORRANK_RET = 210385;

	LOBBY2CENTER_REDUCEGLOBALGOODSNUM_NTF   = 210386;
	CENTER2LOBBY_UPDATEGLOBALGOODS_NTF      = 210387;

	LOBBY2CLIENT_CLEARSERVERTEAMHONORRANK_NTF= 210388;
	
	LOBBY2CLIENT_HANDBOOK_STRENGTH_RET		= 210400;
	CLIENT2LOBBY_HANDBOOK_STRENGTH_REQ		= 210401;

	CLIENT2LOBBY_GETSEARCHTOMBINFO_REQ      = 210500;
	CLIENT2LOBBY_SEARCHTOMBGO_REQ           = 210501;
	LOBBY2CLIENT_GETSEARCHTOMBINFO_NTF      = 210502;	
	CLIENT2LOBBY_SEARCHTOMBEVENTDONE_REQ    = 210503;
	LOBBY2CLIENT_SEARCHTOMBGO_RET           = 210504;
	LOBBY2CLIENT_SEARCHTOMBEVENTDONE_RET    = 210505;
	
	CLIENT2LOBBY_GETSECRETHOLEROBOT_REQ     = 210508;
	LOBBY2CLIENT_GETSECRETHOLEROBOT_RET     = 210509;
	CLIENT2LOBBY_GETSECRETHOLEINFO_REQ      = 210510;
	LOBBY2CLIENT_GETSECRETHOLEINFO_RET      = 210511;
	CLIENT2LOBBY_ATTACKSECRETHOLE_REQ       = 210512;
	LOBBY2CLIENT_ATTACKSECRETHOLE_RET       = 210513;
	CLIENT2LOBBY_ATTACKSECRETHOLERESULT_REQ = 210514;
	LOBBY2CLIENT_ATTACKSECRETHOLERESULT_RET = 210515;
	CLIENT2LOBBY_OPENSECRETHOLEBOX_REQ      = 210516;
	LOBBY2CLIENT_OPENSECRETHOLEBOX_RET      = 210517;
	CLIENT2LOBBY_BUYSECRETHOLEBUFF_REQ      = 210518;
	LOBBY2CLIENT_BUYSECRETHOLEBUFF_RET      = 210519;
	CLIENT2LOBBY_CHOOSESECRETHOLE_REQ       = 210520;
	LOBBY2CLIENT_CHOOSESECRETHOLE_RET       = 210521;
	CLIENT2LOBBY_SWEEPSECRETHOLE_REQ        = 210522;
	LOBBY2CLIENT_SWEEPSECRETHOLE_RET        = 210523;
	CLIENT2LOBBY_BUYSECRETHOLEGOODS_REQ     = 210524;
	LOBBY2CLIENT_BUYSECRETHOLEGOODS_RET     = 210525; 
	CLIENT2LOBBY_BUYSEVENONEINFOUR	        = 210526;
	LOBBY2CLIENT_BUYSEVENONEINFOUR					= 210527;
	CLIENT2LOBBY_BUYSEVENONEINFOUR_SELF     = 210528;
	LOBBY2CLIENT_BUYSEVENONEINFOUR_SELF     = 210529;
	
	LOBBY2CENTER_AUCTION_SELF     			= 210530;
	LOBBY2CENTER_BUY_AUCTION_SELF           = 210531;
	CENTER2LOBBY_BUY_AUCTION_SELF           = 210532;
	LOBBY2CENTER_GET_LIST_SELF           	= 210534;
	CENTER2LOBBY_GET_LIST_SELF 				= 210535;
	CLIENT2LOBBY_BUY_AUCTION_SELF 			= 210536;
	CLIENT2LOBBY_GET_LIST_SELF 				= 210537;
	LOBBY2CLIENT_BUY_AUCTION_SELF           = 210538;
	LOBBY2CLIENT_GET_LIST_SELF              = 210539;
	CENTER2LOBBY_AUCTION_END_SELF  			= 210540;
	LOBBY2CENTER_CLEAN_AUCTION 				= 210541;

	LOBBY2CENTER_GETGLOBALSERVERRANK_REQ    = 210542;
	CENTER2LOBBY_GETGLOBALSERVERRANK_RET    = 210543;
	CLIENT2LOBBY_GETGLOBALSERVERRANK_REQ    = 210544;
	LOBBY2CLIENT_GETGLOBALSERVERRANK_RET    = 210545;
	LOBBY2CENTER_PLAYERGLOBALSERVERRANK_NTF = 210546;
	CLIENT2LOBBY_UPDATETITLE_REQ 			= 210547;
	LOBBY2CLIENT_UPDATETITLE_RET 			= 210548;

	CLIENT2LOBBY_GETHERORANK_REQ            = 210550;
	LOBBY2CLIENT_GETHERORANK_RET            = 210551;
	LOBBY2CLIENT_FRIENDONLINE_NTF           = 210552;

	LOBBY2CLIENT_RETURNSYSTEM_NTF           = 210560;
	CLIENT2LOBBY_GETRETURNTASKREWARD_REQ    = 210561;
	LOBBY2CLIENT_GETRETURNTASKREWARD_RET    = 210562;
	LOBBY2CLIENT_UPDATERETURNTASK_RET       = 210563;

	CLIENT2LOBBY_DOACTIVITYOPT_REQ          = 210570;
	LOBBY2CLIENT_DOACTIVITYOPT_RET          = 210571;

	CLIENT2LOBBY_GETPLAYERTERRITORYINFO_REQ = 210580;
	CLIENT2LOBBY_GETPLAYERTERRITORYBATTLEPLAYER_REQ=210581;
	CLIENT2LOBBY_ATTACKPLAYERTERRITORYRESULT_REQ=210582;
	CLIENT2LOBBY_PATROLPLAYERTERRITORY_REQ = 210583;
	CLIENT2LOBBY_GETPLAYERTERRITORYREWARD_REQ = 210584;
	CLIENT2LOBBY_GETFRIENDTERRITORYLIST_REQ = 210585;
	CLIENT2LOBBY_GETFRIENDTERRITORYINFO_REQ = 210586;
	CLIENT2LOBBY_SUPPRESSFRIENDTERRITORY_REQ = 210587;
	CLIENT2LOBBY_UPTERRITORYSKILL_REQ      = 210588;
	LOBBY2CLIENT_UPTERRITORYSKILL_RET      = 210589;

	LOBBY2CLIENT_GETPLAYERTERRITORYINFO_RET = 210590;
	LOBBY2CLIENT_GETPLAYERTERRITORYBATTLEPLAYER_RET = 210591;
	LOBBY2CLIENT_ATTACKPLAYERTERRITORYRESULT_RET = 210592;
	LOBBY2CLIENT_PATROLPLAYERTERRITORY_RET = 210593;
	LOBBY2CLIENT_GETPLAYERTERRITORYREWARD_RET = 210594;
	LOBBY2CLIENT_GETFRIENDTERRITORYLIST_RET = 210595;
	LOBBY2CLIENT_GETFRIENDTERRITORYINFO_RET = 210596;
	LOBBY2CLIENT_SUPPRESSRRIENDTERRITORY_RET = 210597;
	LOBBY2CLIENT_PLAYERTERRITORYRRIOTDONE_NTF = 210598;
	LOBBY2CLIENT_PLAYERTERRITORYRNEWEVENT_NTF = 210599;
	// ÃØ¾³¾«Ó¢ 
	CLIENT2LOBBY_ATTACKSECRETHOLEELITE_REQ 		= 210600;
	LOBBY2CLIENT_ATTACKSECRETHOLEELITE_RET 		= 210601;
	CLIENT2LOBBY_ATTACKSECRETHOLERESULTELITE_REQ= 210602;
	LOBBY2CLIENT_ATTACKSECRETHOLERESULTELITE_RET= 210603;

	// Îä½«¾õÐÑ
	CLIENT2LOBBY_HERO_WAKE_REQ 				= 210604;
	LOBBY2CLIENT_HERO_WAKE_RET 				= 210605;
	CLIENT2LOBBY_SYN_WAKEEQUIP_REQ 			= 210606;
	LOBBY2CLIENT_SYN_WAKEEQUIP_RET 			= 210607;
	CLIENT2LOBBY_MARKITEM_REQ 				= 210608;
	LOBBY2CLIENT_MARKITEM_RET 				= 210609;
	CLIENT2LOBBY_WEAR_WAKE_EQUIP_REQ 		= 210610;
	LOBBY2CLIENT_WEAR_WAKE_EQUIP_RET 		= 210611;
	LOBBY2CLIENT_HEROWAKENOTICE_NTF 		= 210612;
	
	// ½«Áé
	CLIENT2LOBBY_UPGRADEDIAGRAM_REQ 		= 210613;
	LOBBY2CLIENT_UPGRADEDIAGRAM_RET 		= 210614;
	CLIENT2LOBBY_DIAGRAMACHIEVEACTIVATE_REQ = 210615;
	LOBBY2CLIENT_DIAGRAMACHIEVEACTIVATE_RET = 210616;
	CLIENT2LOBBY_GENERALEXERCISE_REQ 		= 210617;
	LOBBY2CLIENT_GENERALEXERCISE_RET 		= 210618;
	CLIENT2LOBBY_GENERALEXERCISERESULT_REQ  = 210619;
	LOBBY2CLIENT_GENERALEXERCISERESULT_RET  = 210620;
	CLIENT2LOBBY_DIAGRAMLIST_REQ 			= 210621;
	LOBBY2CLIENT_DIAGRAMLIST_RET 			= 210622;
	CLIENT2LOBBY_ENTERGHOST_REQ 			= 210623;
	LOBBY2CLIENT_ENTERGHOST_RET 			= 210624;
	CLIENT2LOBBY_REFRESHEXERCISEBOSS_REQ 	= 210625;
	LOBBY2CLIENT_REFRESHEXERCISEBOSS_RET 	= 210626;
	LOBBY2CLIENT_GHOSTACTIVE_NTF 			= 210627;
	LOBBY2CLIENT_REFRESHEPICBOSS_NTF 		= 210628;
	CLIENT2LOBBY_VIEWGHOST_REQ 				= 210633;
	LOBBY2CLIENT_VIEWGHOST_RET 				= 210634;
	CLIENT2LOBBY_BATCHRESOLVE_REQ 			= 210635;
	LOBBY2CLIENT_BATCHRESOLVE_RET 			= 210636;
	CLIENT2LOBBY_CANRESOLVELIST_REQ 		= 210637;
	LOBBY2CLIENT_CANRESOLVELIST_RET 		= 210638;

	LOBBY2CLIENT_NEWHANDPROGRESS_RET        = 210700;
	CLIENT2LOBBY_SEVENGIFTS_REQ 			= 210704;
	LOBBY2CLIENT_SEVENGIFTS_RET 			= 210705;
	LOBBY2CLIENT_SEVENGIFTS_NTF 			= 210706;	
	CLIENT2LOBBY_ONLINEREWARD_REQ 			= 210707;
	LOBBY2CLIENT_ONLINEREWARD_RET 			= 210708;
	LOBBY2CLIENT_ONLINEREWARD_NTF 			= 210709;
	CLIENT2LOBBY_ONLINEACCCOIN_REQ 			= 210710;
	LOBBY2CLIENT_ONLINEACCCOIN_RET 			= 210711;
	CLIENT2LOBBY_GETOFFLINEEXP_REQ 			= 210717;
	LOBBY2CLIENT_GETOFFLINEEXP_RET 			= 210718;
	LOBBY2CLIENT_OFFLINESTATE_NTF 			= 210719;	
	CLIENT2LOBBY_GETRETRIEVEREWARD_REQ 		= 210720;
	LOBBY2CLIENT_GETRETRIEVEREWARD_RET 		= 210721;
	CLIENT2LOBBY_GETALLRETRIEVEREWARD_REQ 	= 210722;
	LOBBY2CLIENT_GETALLRETRIEVEREWARD_RET 	= 210723;
	LOBBY2CLIENT_RETRIEVESTATE_NTF 			= 210724;
	LOBBY2CLIENT_CHATPASSWORD_NTF 			= 210725;
	CLIENT2LOBBY_CHATPASSWORDACT_REQ 		= 210726;
	LOBBY2CLIENT_CHATPASSWORDACT_RET 		= 210727;

	CLIENT2LOBBY_DEBUG_REQ				 	= 210730;
	LOBBY2CLIENT_DEBUG_RET					= 210731;

	//====================================S2S   30000 ========================================

	// Lobby2DB   300000 --- 349999

	LOBBY2DB_LOAD_CHARACTER_REQ				= 300000;
	LOBBY2DB_CREATE_CHARACTER_REQ			= 300001;
	LOBBY2DB_SAVE_CHARACTER_REQ				= 300002;
	LOBBY2DB_SAVE_BAG_REQ					= 300003;
	LOBBY2DB_LOAD_BAG_REQ					= 300004;
	LOBBY2DB_ADDDIAMOND_REQ					= 300005;
	LOBBY2DB_LOAD_CHARLIST_REQ				= 300006;
	LOBBY2DB_CHANGE_NAME_CHECK_REQ			= 300007;
	LOBBY2DB_UPDATE_SUPREMEHOTBOX			= 300008;
	LOBBY2DB_GET_ADVANCED_CHARINFO_REQ		= 300009;
	LOBBY2DB_SAVE_ADVANCED_CHARACTER_REQ	= 300010;
	LOBBY2DB_UPDATE_ARENA_RANK				= 300012;
	LOBBY2DB_UPDATE_ARENA_LOG				= 300013;
	LOBBY2DB_OFFLINE_MAIL					= 300014;
	LOBBY2DB_CHECKTOKEN_REQ					= 300015;
	LOBBY2DB_SERVER							= 300016;
	LOBBY2DB_APPLY_FRIEND					= 300017;
	LOBBY2DB_ADD_FRIEND						= 300018;
	LOBBY2DB_DEL_FRIEND						= 300019;
	LOBBY2DB_SENDENERGY						= 300020;
	LOBBY2DB_PURCHASEINFO				 	= 300021;
	LOBBY2DB_GET_TARGET_FRIENDINFO			= 300022;

	LOBBY2DB_LOADACTIVITYREQ				= 300050;
	LOBBY2DB_UPDATEACTIVITYREQ				= 300051;
	LOBBY2DB_LOADRANKREQ    				= 300060;
	LOBBY2DB_UPDATERANKREQ	    			= 300061;
	LOBBY2DB_CLEARRANKREQ                   = 300062;
	LOBBY2DB_LOADARENAREQ    				= 300070;
	LOBBY2DB_UPDATEARENAREQ	    			= 300071;

	// DB2Lobby   350000 --- 399999

	DB2LOBBY_LOAD_CHARACTER_RET				= 350000;
	DB2LOBBY_CREATE_CHARACTER_RET   		= 350001;
	DB2LOBBY_SAVE_CHARACTER_RET     		= 350002;
	DB2LOBBY_SAVE_BAG_RET					= 350003;
	DB2LOBBY_LOAD_BAG_RET					= 350004;
	DB2LOBBY_LOAD_CHARLIST_RET				= 350005;
	DB2LOBBY_CHANGE_NAME_CHECK_RET			= 350006;
	//DB2LOBBY_SUPREMEHOTBOX_NTF				= 350007;
	DB2LOBBY_GET_ADVANCED_CHARINFO_RET		= 350008;
	DB2LOBBY_SAVE_ADVANCED_CHARACTER_RET	= 350009;
	DB2LOBBY_CHECKTOKEN_RET					= 350010;
	DB2LOBBY_SERVER							= 350011;
	DB2LOBBY_APPLY_FRIEND					= 350012;
	DB2LOBBY_ADD_FRIEND						= 350013;
	DB2LOBBY_DEL_FRIEND						= 350014;
	DB2LOBBY_SHOP							= 350015;
	DB2LOBBY_GET_TARGET_FRIENDINFO_RET		= 350016;

	DB2LOBBY_LOADACTIVITYRET				= 350050;
	DB2LOBBY_LOADRANKRET				    = 350060;
	DB2LOBBY_LOADARENARET				    = 350070;

	LOBBY2DB_LOADGUILD_REQ                  = 350080;
    DB2LOBBY_GUILDINFO_RET                  = 350081;
    DB2LOBBY_GUILDPlAYERS_RET               = 350082;
    DB2LOBBY_GUILDAPPLYS_RET                = 350083;
    LOBBY2DB_UPDATEGUILDINFO_REQ            = 350085;
    LOBBY2DB_UPDATEGUILDPLAYER_REQ          = 350086;
    LOBBY2DB_UPDATEGUILDAPPLY_REQ           = 350087;
    LOBBY2DB_UPDATEGUILDRITUAL_REQ          = 350088;
	LOBBY2DB_UPDATEGUILDNEWDAY_REQ          = 350089;
	LOBBY2DB_LOAD_WORLD_REQ        			= 350090;
	DB2LOBBY_LOAD_WORLD_RET        			= 350091;
	LOBBY2DB_LOAD_ROBOT_REQ        			= 350092;
	DB2LOBBY_LOAD_ROBOT_RET        			= 350093;
	LOBBY2DB_CREATE_ROBOT_REQ        		= 350094;
	DB2LOBBY_CREATE_ROBOT_RET        		= 350095;
	LOBBY2DB_SAVE_ROBOT_REQ        			= 350096;
	DB2LOBBY_SAVE_ROBOT_RET        			= 350097;
	
	// between db and lobby
	LOBBY2DB_GET_RECOMMAND_FRIEND_REQ		= 360000;	
	DB2LOBBY_GET_RECOMMAND_FRIEND_RET		= 360001;	
	LOBBY2DB_SAVE_GLOBAL_REQ				= 360002;
	DB2LOBBY_GLOBAL_NTF						= 360003;
	LOBBY2DB_LOAD_TREASURE_REQ				= 360004;
	DB2LOBBY_LOAD_TREASURE_RET				= 360005;

	//between db & lobby 380000 --- 389999
	LOBBY2DB_GET_TARGET_USERINFO_REQ		= 380000;
	DB2LOBBY_GET_TARGET_USERINFO_RET		= 380001;

	LOBBY2DIR_LASTLOGINSERVERID_NTF			= 390000;
	LOBBY2DIR_UPDATE_STATE					= 390001;

						
	// location
	S2N_READY								= 400001;
	S2N_STARTED								= 400002;
	S2N_STOPPED								= 400003;
	S2N_SHELL_COMMAND_OVER					= 400004;
	N2S_UPDATE_CONFIG						= 400005;
	N2S_START								= 400006;
	N2S_STOP								= 400007;
	N2S_SHELL_COMMAND						= 400008;

	// netprocess
	HNET_TRANSFER_PACKET					= 500000;
	H2NET_SETUP_LISTENERS					= 500001;
	H2NET_CLOSE_NETWORK						= 500002;
	H2NET_CONNECT							= 500003;
	NET2H_ACCEPTED							= 500004;
	NET2H_CONNECTED							= 500005;
	NET2H_LOST								= 500006;
	NET2H_CONNECTFAIL						= 500007;
	NET2H_LISTEN_FAILED						= 500008;


	// system
	
	KEEP_ALIVE								= 600001;
	KEEP_ALIVE_ACK							= 600002;
	PACKET_PACK								= 600003;
	MONITOR_CMD								= 600005;
	MONITOR_CMD_RESULT						= 600006;
	RS_CMD									= 600008;
	RS_PROMPT								= 600009;

	// log
	ALL2LOG_ALLOC_LOG						= 700001;
	ALL2LOG_BEGIN_LOG						= 700002;
	ALL2LOG_WRITE_LOG						= 700003;
	ALL2LOG_END_LOG							= 700004;
	LOBBY2REPORT_LOGIN						= 700005;
	LOBBY2REPORT_REGISTER					= 700006;
	LOBBY2REPORT_ACCEPT						= 700007;
	LOBBY2REPORT_INVITE						= 700008;
	LOBBY2REPORT_CONSUME					= 700009;
	LOBBY2REPORT_RECHARGE					= 700010;
	LOBBY2REPORT_QUIT						= 700011;
	LOG2ALL_ALLOC_LOG						= 700012;
	LOG2ALL_BEGIN_LOG						= 700013;
	LOG2ALL_WRITE_LOG						= 700014;
	LOG2ALL_END_LOG							= 700015;

	// gm
	CLIENT2LOBBY_GM_CMD						= 800000;
	LOBBY2CLIENT_GM_CMD						= 800001;

	//Lobby2Center
	LOBBY2CENTER_SERVERINFO_NTF             = 900000;
	LOBBY2CENTER_PLAYERTURNTABLE_NTF        = 900001;
	LOBBY2CENTER_GETTURNTABLERANK_REQ       = 900002;
	CENTER2LOBBY_GETTURNTABLERANK_RET       = 900003;
	LOBBY2CENTER_SERVERWARCONF_NTF          = 900004;
	LOBBY2CENTER_SETTIME_NTF                = 900005;
	LOBBY2CENTER_SERVERCONF_NTF             = 900006;
}

//ÁÄÌìÀàÐÍ
enum ChatType
{
	CHAT_TYPE_PRIVATE		= 1;
	CHAT_TYPE_SYSTEM		= 2;
	CHAT_TYPE_PLAYERROOM	= 3;
	CHAT_TYPE_COMMONCHAT	= 4;
	CHAT_TYPE_FAMILY		= 5;
	CHAT_TYPE_MARRY			= 6;
	CHAT_TYPE_BIGHORN		= 7;
}


// ÈÎÎñ
message NotFinQuest
{
	required uint32 questid		= 1;
	required uint32 complete	= 2;			// ÊÇ·ñÍê³É
	required uint32	targetValue	= 3;			// Ä¿±ê²ÎÊý
	optional uint32 show        = 4;
	optional uint32 got         = 5;            //ÊÇ·ñÒÑÁì½±
	optional uint32 completeTime = 6;           
};
message DbQuest
{
	repeated uint32			commitquests	= 1;	// ÒÑÍê³ÉµÄÈÎÎñ
	repeated NotFinQuest	notfinquests	= 2;	
};
				

// »õ±Ò½á¹¹
message CoinInfo
{
	required uint32 coinType			= 1;
	required uint32 coinNum				= 2;
}

// µÀ¾ß½á¹¹
message ItemInfo
{
	required uint32 templateid			= 1;
	required uint32 totalnum			= 2;
	optional uint32 value1 				= 3;
	optional uint32 value2 				= 4;
}

// Éñ×°½á¹¹
message DBGodEquip
{
	required uint32 templateid			= 1;
	required uint32 totalnum			= 2;
}


// ±³°ü½á¹¹
message DbBagInfo
{
	repeated ItemInfo prop	 = 1;
}

// ¸±±¾ÆÀ¼Û ÌôÕ½ ÖØÖÃ
message DBEvaluation
{
	required uint32			instanceId			= 1;		// Ä£°åid
	required uint32			evaluation			= 2;		// ÆÀ¼Û
	required uint32			challengeTimes		= 3;		// ÌôÕ½´ÎÊý
	required uint32			resetTimes			= 4;		// ÖØÖÃ´ÎÊý
}
message DBEvaluationList
{
	repeated DBEvaluation	evaluation			= 1;
	optional uint32         share_count         = 2;
    optional uint32         share_buy           = 3;
}
// Ç©µ½
message DBChapterRewardList
{
	repeated uint32	chapterReward	= 1;		 // ´ú±íÇ©µ½Çé¿ö
}

// Ó¢ÐÛ×°±¸
message DBHeroEquip
{
	required uint32			templateId			= 1;
	required uint32			star				= 2;	// ÐÇ¼¶
	repeated uint32			attrVal				= 3;	// ÊôÐÔ¼Ó³É
	repeated uint32			scheduleVal			= 4;	// ¾«Á¶½ø¶È
}
// ÐÂÓ¢ÐÛ×°±¸
message DBEquipNew
{
	required uint32			templateId			= 1;
	required uint64			instanceId			= 2;
	required uint32			strengLevel			= 3;	// Ç¿»¯µÈ¼¶
	required uint32			refineLevel			= 4;	// ¾«Á¶µÈ¼¶
	optional uint32         starLevel           = 5;    // ÐÇ¼¶
	optional uint32         strengExp           = 6;   
	optional uint32         refineExp           = 7;    
}
message DBEquipNewList
{
	repeated DBEquipNew	 equipNewList		= 1;
}

message DBHeroInfo
{
	required uint32			templateId			= 1;
	required uint64			instanceId			= 2;
	required uint32			level				= 3;
	required uint32			exp					= 4;
	required uint32			evolutionLevel		= 5;	// ½ø»¯µÈ¼¶
	required uint32			forceLevel			= 6;	// Ç¿»¯µÈ¼¶
	repeated DBHeroEquip	equip				= 7;	// Ìì¸³
	repeated uint32			skill				= 8;	// ¼¼ÄÜ
	optional bytes			heroName			= 9;	// Ó¢ÐÛÃû×Ö
	repeated uint64			equipNew			= 10;
	optional uint32			fashionId			= 11;	//Ê±×°
	optional uint32         deificationlevel    = 12;
	optional uint32         wingslevel          = 13;
	optional uint32         wingsrate           = 14;
  	repeated ClientSource   sources             = 15;   //³á°òÉý¼¶ÏûºÄµÄµÀ¾ß
	optional uint32  		wakeLevel 			= 16;
	repeated uint32 		wakeEquips 			= 17;
}
message DBHeroList
{
	repeated DBHeroInfo	 heroList		= 1;
}

// ºËÐÄ¼ÛÖµ
message DBEssenceItem
{
	required uint32			templateId			= 1;
	required uint32			itemValue			= 2;
	required uint32			num 				= 3;
}
message DBEssenceList
{
	repeated DBEssenceItem	essenceItem			= 1;
}
enum eItemUseRestrict
{
	eItemUseRestrict_None  = 0;
	eItemUseRestrict_Level = 1;
	eItemUseRestrict_Effect= 2;
	eItemUseRestrict_Vip   = 3;
	eItemUseRestrict_Gender= 4;
	eItemUseRestrict_GuildLevel= 5;
	eItemUseRestrict_ArenaRank = 6;
	eItemUseRestrict_CrusadeMax= 7;
	eItemUseRestrict_SecretHole=8;
	eItemUseRestrict_Diagram = 9;
	eItemUseRestrict_Max   = 10;
};
message ItemUseRestrict
{
	required eItemUseRestrict type = 1;
	required uint32           value= 2;
};

//ÉñÃØÉÌµê
message DBShopGoods
{
	required uint32		itemType	= 1;	// ÉÌÆ·ÀàÐÍ
	required uint32		templateId	= 2;	// µÀ¾ßID
	required uint32		SellVal		= 3;	// ÊýÁ¿	
	required uint32		PriceType	= 4;	// »õ±ÒÀàÐÍ	
	required uint32		PARA1		= 5;	// µÀ¾ßID	
	required uint32		PARA2		= 6;	// ¼Û¸ñÊýÁ¿
	required bool		bSale		= 7;	// ÊÇ·ñÒÑ¾­³öÊÛ
	optional uint32     goodsid     = 8;    // Åä±íµÄgoodsid
}
message DBGoodsList
{
	required uint32			shopType		= 1;	// ÉÌµêÀàÐÍ
	required uint32			activityTime	= 2;	// ¼¤»îÊ±¼ä
	required uint32			lastRefreshTime	= 3;	// ×îºóÒ»´ÎË¢ÐÂÊ±¼ä
	repeated DBShopGoods	goodsList		= 4;
}
message DBShopList
{
	repeated DBGoodsList	shopList	= 1;
}

// ¼ÆÊýÀàÊÕ·Ñ
message DBShopRefresh
{
	required uint32			RefreshNum		= 1;	// Ë¢ÐÂÀàÐÍ
	required uint32			LastRefreshTime	= 2;	// ×îºóË¢ÐÂÊ±¼ä
}
message DBShopRefreshList
{
	repeated uint32	RefreshList	= 1;
}

// »î¶¯
message DBFestivityInfo
{
	required uint32	festivityId			= 1; // Ãû½«¸±±¾id
	required uint32	enterCount			= 2; // ´ÎÊý
}
message DBFestivityList
{
	repeated DBFestivityInfo	FestivityList	= 1;
}
// ×ÊÔ´½á¹¹
message ClientSource
{
	required uint32	sourceType			= 1;//ÎïÆ·´óÀà(1»ù´¡ÊôÐÔ   2µÀ¾ß    3Ó¢ÐÛ )
	required uint32	sourceId			= 2;//×ÊÔ´ID
	required uint32	sourceNum			= 3;//ÊýÁ¿
}
// ÓÊ¼þ
message DBMailInfo
{
	required uint64				instanceId			= 1;	// ÓÊ¼þÎ¨Ò»ID
	required uint32				templateId			= 2;	// ÓÊ¼þÅä±íID
	required uint32				mailType			= 3;	// ÀàÐÍ
	required bytes				subjectStr			= 4;	// ÓÊ¼þ±êÌâ
	required bytes				contextStr			= 5;	// ÓÊ¼þÄÚÈÝ
	required bytes				senderStr			= 6;	// ·¢¼þÈË
	required uint32				createtime			= 7;	// ·¢ËÍÊ±¼ä
	required bool				bRead				= 8;	// ÊÇ·ñÒÑ¶Á
	repeated ClientSource		accessory			= 9;	// ¸½¼þ
	required uint32				opType				= 10;	// 1 insert 2 update 3 del
	required uint32				saveTime			= 11;	// ±£ÁôÊ±¼ä
}

// ¾º¼¼³¡
message DBArenaHero
{
	required uint32			templateId		= 1;
	required uint32			level			= 2;
	required uint32			evolutionLevel	= 3;		// ÐÇ¼¶
	required uint32			forceLevel		= 4;		// Ç¿»¯
	repeated DBHeroEquip	equip			= 5;		// ×°±¸
	repeated uint32			skillLevel		= 6;		// ¼¼ÄÜµÈ¼¶
	optional bytes			heroName		= 7;		// Ó¢ÐÛÃû×Ö
	repeated DBEquipNew		newEquip		= 8;		// ÐÂ×°±¸
};
message DBArenaPlayer
{
	required	uint32				rank			= 1;
	required	uint64				charID		    = 2;
	optional	bytes				playerName		= 3;
	required	uint32				playerLevel		= 4;
	required	uint32				playerPhoto		= 5;
	required	uint32				vipLvl			= 6;
	required	uint32				effective		= 7;		// Õ½¶·Á¦
	required	uint32				totalWin		= 8;
	repeated	DBArenaHero			arHeroList		= 9;
};
message DBArenaRank
{
	repeated	DBArenaPlayer		arenaPlayerList	= 1;
};
message DBArenaLog
{
	required uint32		type		= 1;	// 1 Ö÷¶¯ÌôÕ½  2 ±»ÌôÕ½
	required uint64		charId		= 2;	// ¶ÔÊÖID
	required bytes		charName	= 3;	// ¶ÔÊÖÃû×Ö
	required uint32		charLvl		= 4;	// ¶ÔÊÖµÈ¼¶
	required uint32		charPhoto	= 5;	// ¶ÔÊÖÍ·Ïñ
	required uint32		charVip		= 6;	// ¶ÔÊÖVip
	required bool		bWin		= 7;	// ÊÇ·ñÊ¤Àû
	required uint32		newRank		= 8;	// ÐÂÃû´Î
	required bool		bRobot		= 9;	// ÊÇ·ñÊÇ»úÆ÷ÈË
	required uint32		curTime		= 10;	// Õ½¶·Ê±¼ä
};
message DBArenaLogList
{
	repeated	DBArenaLog		arenaLog	= 1;
};


message DBFriendInfo
{
	required uint64	charId		= 1;
	required bytes	charName	= 2;
	required uint32	photo		= 3;
	required uint32	charLevel	= 4;
	required uint32	effect		= 5;
	required uint32	vipLevel	= 6;
	required bytes	guildName	= 7;
	required bool	bSend		= 8; //  ÓÐÃ»ÓÐËÍ¹ý¾«Á¦
	required uint32	receive		= 9; //  ÊÕ¾«Á¦ 0 Î´ËÍ  1 Î´ÊÕ 2 ÒÑÊÕ
	required uint32 loginTime	= 10; // ×î½üµÇÂ¼Ê±¼ä
};

message DBFriendList
{
	repeated	DBFriendInfo friendList	 = 1;
	repeated	DBFriendInfo blackList	 = 2;
	repeated	DBFriendInfo applyList	 = 3;
}

message ShopInfo
{
	required uint32 goodsid 		= 1;
	required uint32	shoptype 		= 2;
	required uint32 buytype 		= 3;
	required uint32 buycontentid 	= 4;
	required uint32 buycount 		= 5;
	required uint32 costtype 		= 6;
	required uint32 costcontentid	= 7;
	required uint32 costcount 		= 8;
	required uint32 costcountold 	= 9;
	required uint32 status			= 10;
	required uint32 platformtype 	= 11;
	required bytes limitnumber		= 12;
	required uint32 limittype		= 13;
	required uint32 prizefloat		= 14;
}

message GoodsData
{
	required uint32 goodsid		= 1;
	required uint32	already		= 2;
	required uint32	flushtime	= 3;
}

message GoodsDataList
{
	repeated	GoodsData goodsdatalist	 = 1;
}

// ÈÎÎñÐÅÏ¢
message ClientQuest
{
	required uint32		questid				= 1;
	required uint32		complete			= 2;	// Íê³É´ÎÊý : 0 Î´Íê³É
	required uint32		targetValue			= 3;	// Ä¿±êÍê³ÉÖµ
	required uint32		isShow				= 4;	// ÊÇ·ñÏÔÊ¾ 0 ²»ÏÔÊ¾  ¡¢ 1 ÏÔÊ¾
	optional uint32		isGet				= 5;	// ÊÇ·ñÁì½±
	optional uint32     completeTime        = 6;    // Íê³ÉÊ±¼ä
}

// ¸±±¾ÆÀ¼Û
message TEvaluation
{
	required uint32			instanceId			= 1;
	required uint32			evaluation			= 2;
}

// Ó¢ÐÛ×°±¸
message HeroEquipInfo
{
	required uint32			templateId			= 1; // Ä£°åID
	required uint32			star				= 2; // ÐÇ¼¶
	repeated uint32			attrVal				= 3; // ÊôÐÔÖµ
	repeated uint32			scheduleVal			= 4; // ½ø¶ÈÖµ
}
// ÐÂÓ¢ÐÛ×°±¸
message HeroEquipNew
{
	required uint32			templateId			= 1;
	required uint64			instanceId			= 2;
	required uint32			strengLevel			= 3;
	required uint32			refineLevel			= 4;
	optional uint32         starLevel           = 5;
	optional uint32         strengExp           = 6;
	optional uint32         refineExp           = 7;
}

message Property
{
	required uint32 index = 1;
 	optional float  base  = 2;
	optional float  per   = 3;
}
message WakeAttr
{
	repeated Property prop = 1;
}

message Diagram
{
	required uint32 id 		= 1;
	required uint32 level 	= 2;
}

message DiagramChapter
{
	required uint32 id 		= 1;
	required uint32 num 	= 2;
}

message DiagramChapterMap
{
	required uint32 	id 			= 1;
	repeated Diagram 	diagram 	= 2;
}

message DiagramMap
{
	repeated DiagramChapterMap diagramChapterMap = 1;
}

message GhostDetail
{
	required uint32 id 			= 1;
	repeated uint32 activeId 	= 2;
}

message Ghost
{
	required uint32 id          = 1;
	repeated uint32 activeId   	= 2;
}

message GhostList
{
	repeated GhostDetail ghostList = 1;
}

// Ê·Ê«¹Ø¿¨boss
message EpicBoss
{
	required uint32  		chapterId 	= 1;         	//boss ÕÂ½Ú
	required uint32 		mapId		= 2;         	//boss mapid 
	required uint32 		state 		= 3; 	    	//boss ×´Ì¬  (1: ÒÑ´ò°Ü, 0: Î´±»´ò°Ü)
}
message EpicBossList
{
	repeated EpicBoss 		list = 1;
}

// ÔÚÏß½±Àø
message OnlineRewards
{
	optional uint32                 onlinetime  = 1;
	repeated ClientSource           sources = 2;    //»ñÈ¡µÄ½±Àø
}

// ÇàÍ­ÉñÊ÷
message TreeState
{
	required uint32 			level 	= 1;
	required uint32 			acctime = 2;
	repeated ClientSource 		sources = 3;
}

// ×ÊÔ´ÕÒ»Ø £¨»î¶¯ÀàÐÍ£©
enum RetrieveActivity
{
	RetrieveActivity_None 		= 0;
	RetrieveActivity_RebelBoss 	= 1; 		// ½Ë·Ë
	RetrieveActivity_Crusade 	= 2;  		// ÑªÕ½
	RetrieveActivity_Rob 		= 3;		// ¶á±¦
	RetrieveActivity_Arena 		= 4;		// ¾º¼¼³¡
	RetrieveActivity_Ghost 		= 5;	 	// ½«Áéµã½«
	RetrieveActivity_Daily 		= 6;		// ÈÕ³£
	RetrieveActivity_Max 		= 7; 		// ±ØÐëÊÇÒÑÓÐµÄ»î¶¯Ã¶¾ÙÖµ+1
}

// ×ÊÔ´ÕÒ»Ø×´Ì¬
message RetrieveState
{
	required uint32 		retrieveActivity 	= 1; 	//»î¶¯ÀàÐÍ
	required uint32 		state 				= 2; 	//×´Ì¬  0£º¿ÉÁìÈ¡ 1£ºÒÑÁìÈ¡ 2£º²»¿ÉÁìÈ¡
}

// ÁÄÌìÃØ¼®×´Ì¬
message PassWordState
{
	required uint32 		id 		= 1;
	required uint32 		state 	= 2; 		//×´Ì¬  0£ºÎ´¼¤»î 1£º¼¤»î 2£ºÒÑÁìÈ¡
}

// Ó¢ÐÛ
message ClientHeroInfo
{
	required uint32			templateId			= 1;
	required uint64			instanceId			= 2;	// ÊµÀýID
	required uint32			level				= 3;
	required uint32			exp					= 4;	
	required uint32			evolutionLevel		= 5;	// ÉýÐÇµÈ¼¶
	required uint32			forceLevel			= 6;	// Ç¿»¯µÈ¼¶
	repeated HeroEquipInfo	equip				= 7;	// ×°±¸
	repeated uint32			skillLevel			= 8;	// ¼¼ÄÜµÈ¼¶
	optional bytes			heroName			= 9;	// Ó¢ÐÛÃû×Ö
	repeated uint64			equipNew			= 10;	// Ó¢ÐÛÐÂ×°±¸IDÁÐ±í£¨Ë³Ðò £º ÎäÆ÷£¬Í·¿ø£¬¿ø¼×£¬Ñü´ø£¬Âí£¬ÌØÊâÊÎÆ·£©
	optional uint32			fashionId			= 11;
	repeated uint32         comboSkill          = 12;   // ×éºÏ¼¼
	repeated uint32         fateId              = 13;   // Ôµ·Ö
	repeated HeroEquipNew   equipNewList        = 14;
	optional uint32         deificationlevel    = 15;   //Éñ×ªµÈ¼¶
	optional uint32         wingslevel          = 16;   //³á°òµÈ¼¶
	optional uint32         wingsrate           = 17;   //³á°òÄÜÁ¿
  	repeated ClientSource   sources             = 18;   //³á°òÉý¼¶ÏûºÄµÄµÀ¾ß
	repeated uint32 		wakeEquips 			= 19; 	//¾õÐÑ×°±¸
	optional uint32         wakeLevel          	= 20; 	//¾õÐÑµÈ¼¶
	optional WakeAttr 		property 			= 21; 	//¾õÐÑµ½wakeLevel¼Ó³ÉµÄÊôÐÔ
}

message ClientInstanceEvaluation
{
	required uint32	instanceId			= 1;//¸±±¾ID
	required uint32	evaluation			= 2;//ÆÀ¼Û
	required uint32	challengeTimes		= 3;//Ã¿ÌìÌôÕ½´ÎÊý
	required uint32	resetTimes			= 4;//Ã¿ÌìÖØÖÃ´ÎÊý
}
// 
message ClientFestivityInfo
{
	required uint32	festivityId			= 1;//Ãû½«¸±±¾ÕÂ½ÚID
	required uint32	enterCount			= 2;//ÒÑ¾­²Î¼Ó»î¶¯µÄ´ÎÊý
}

// À­È¡½ÇÉ«ÐÅÏ¢
message OtherUserInfo
{
	required uint64			charId					= 3;
	optional bytes			charName				= 4;
	optional uint32			cash					= 5;	// ½ð±Ò
	optional uint32			gold					= 6;	// ×êÊ¯
	optional uint32			level					= 7;
	optional uint32			exp						= 8;
	optional uint32			curStamina				= 9;
	optional uint32			maxStamina				= 10;
	optional uint32			createTime				= 11;
	optional uint32			offlineTime				= 12;
	optional uint32			updateStaminaTime		= 13;
	optional uint32			bitFlag					= 14;	// Ê×´ÎÐÐÎª±ê¼Ç emBitFlag
	optional DbQuest		quest					= 15;	// ÈÎÎñ DbQuest
	optional DBEvaluationList		evaluation		= 16;	// ¸±±¾ÆÀ¼Û  DBEvaluationList
	optional uint32			vipExp					= 18;	// Vip¾­Ñé
	optional uint32			vipLevel				= 19;	// VipµÈ¼¶
	repeated uint32			formation				= 20;	// ³öÕ½Ó¢ÐÛ
	optional DBHeroList			heroList			= 22;	// Ó¢ÐÛ DBHeroList
	optional uint32			gender					= 23;   // ÐÔ±ð
	optional uint32			photo					= 24;   // Í·Ïñ
	optional DBEssenceList		essenceItem			= 25;   // ºËÐÄ¼ÛÖµ ÓÃÓÚÅÐ¶¨ÎïÆ·µôÂä DBEssenceList
	repeated uint32			RefreshPrice			= 26;	// Ë¢ÐÂ¼Û¸ñ
	optional DBFestivityList		festivity		= 27;   // »î¶¯ ÈÕ³£¸±±¾ DBFestivityList
	optional uint32			lockChatEndTime			= 28;   // ÁÄÌì½âËøÊ±¼ä 
	optional uint32			dayChatTimes			= 29;   // ÊÀ½çÁÄÌì´ÎÊý
	optional uint32			skillPoint				= 30;   // Ê£ÓàÓ¢ÐÛ¼¼ÄÜµãÊý
	optional uint32			updateSkillPointTime	= 31;	// ×îºóÒ»´Î»Ö¸´¼¼ÄÜµãÊ±¼ä
	optional uint32			energy					= 32;	// ¾«Á¦
	optional uint32			updateEnergyTime		= 33;	// ×îºóÒ»´Î»Ö¸´¾«Á¦Ê±¼ä
	optional DBEquipNewList			equipNew		= 34;   // ÐÂ×°±¸ DBEquipNewList
	repeated uint32			arenaFormation		    = 35;	// ¾º¼¼³¡ÕóÈÝ
}

// À­È¡½ÇÉ«ÐÅÏ¢¶ÔÍâ
message OtherUserInfoClient
{
	required uint64						charId				= 1;
	required bytes						charName			= 2;
	required uint32						charExp				= 3;	// ¾­Ñé
	required uint32						charlevel			= 4;	// µÈ¼¶
	required uint32						vipExp				= 5;	// vip¾­Ñé
	required uint32						vipLevel			= 6;	// vipµÈ¼¶
	required uint32						cash				= 7;	// Í­Ç®
	required uint32						gold				= 8;	// ×êÊ¯
	required uint32						curStamina			= 9;	// ÌåÁ¦(ÁîÅÆ)
	required uint32						recoveryTime		= 10;	// ÏÂ´ÎÌåÁ¦»Ö¸´Ê±¼ä(Ãë)
	repeated uint32						formation			= 11;	// ³öÕ½Ó¢ÐÛ
	//repeated ClientQuest				quests				= 12;	// ÈÎÎñ
	repeated ClientHeroInfo				heroBag				= 14;	// Ó¢ÐÛ
	required uint32						gender				= 15;   // ÐÔ±ð101  102 
	required uint32						photo				= 16;   // Í·Ïñ
	required uint32						bitFlag				= 17;   // ±êÖ¾Î»
	repeated ClientInstanceEvaluation	instanceEvaluation	= 18;	// ¸±±¾ÆÀ¼Û
	repeated uint32						RefreshPrice		= 19;	// Ë¢ÐÂ´ÎÊý
	repeated ClientFestivityInfo		festivityInfo		= 20;	// »î¶¯
	//required uint32						coinConquer			= 21;	// ¾º¼¼±Ò
	//required uint32						coinSports			= 22;	// Ô¶Õ÷±Ò
	//required uint32						coinGuild			= 23;	// ¹«»á±Ò
	required uint32						serverTime			= 24;	// ·þÎñÆ÷Ê±¼ä
	required uint32						skillPoint			= 25;	// Ê£ÓàÓ¢ÐÛ¼¼ÄÜµãÊý
	//required uint32						recoverTime			= 26;	// ÏÂÒ»´Î»Ö¸´¼¼ÄÜµãÊýÊ±¼ä(Ãë)
	required uint32						energy				= 27;	// ¾«Á¦
	required uint32						energyReTime		= 28;	// ÏÂ´Î¾«Á¦»Ö¸´Ê±¼ä(Ãë)
	repeated HeroEquipNew				equipNewBag			= 29;	// ÐÂ×°±¸±³°ü
	repeated uint32						heroRaise			= 30;	// ÖúÕóÓ¢ÐÛ
}

message DBPlayerActivity
{
	required uint32			id			= 1;
	required uint32			value		= 2;
	repeated uint32			got			= 3;
	optional uint32         update_time = 4;
	repeated uint32         doneValue   = 5;
}
message DBPlayerActivityList
{
	repeated DBPlayerActivity	act		= 1;
}
message ChapterMapBox
{
	required uint32        maptype     = 1;
	repeated bool          got         = 2;
}
message DBChapterBox
{
	required uint32			id			= 1;
	repeated uint32			got			= 2;
	repeated uint32			elite_got   = 3;
	repeated uint32         epic_got    = 4;
	repeated uint32         legend_got  = 5;
	repeated ChapterMapBox  mapbox      = 6;
}
message DBChapterBoxList
{
	repeated DBChapterBox	items		= 1;
}

enum eRefershType       //Ë¢ÐÂÀàÐÍ(ÓÃÓÚË¢ÐÂ±íµÄkey)
{
	ePriceType_GeneralShop = 0;         //Ãû½«ÉÌµê    0
	ePriceType_RebelShop = 1;           //ÅÑ¾üÉÌµê    1
	ePriceType_BlackShop   = 2;         //ºÚÊÐÉÌµê    2
	ePriceType_SportsShop  = 3;         //¾º¼¼³¡ÉÌµê  3
	ePriceType_GuildShop   = 4;         //¾üÍÅÉÌµê    4
	ePriceType_CrusadeShop = 5;         //Ô¶Õ÷ÉÌµê    5
	ePriceType_InterplanetaryShop =6;   //ÐÇ¼ÊÉÌµê    6
	ePriceType_Treasure = 7;            //Ì½±¦        7
	ePriceType_Conquer  =8;             //Ô¶Õ÷        8
	ePriceType_Elite = 9;               //¾«Ó¢        9
	ePriceType_ChangeName = 10;         //»»Ãû×Ö      10
	ePriceType_ChangePhoto = 11;        //»»Í·Ïñ      11
	ePriceType_GainTreasures = 12;      //ÕÐ²Æ        12
	ePriceType_BuyToken = 13;           //ÂòÌåÁ¦      13
	ePriceType_BuySkill = 14;           //Âò¼¼ÄÜ      14
	ePriceType_ArenaTimes = 15;			//¾º¼¼³¡´ÎÊý  15
	ePriceType_ResetArena = 16;			//¾º¼¼³¡ÖØÖÃ  16
	ePriceType_Signin  = 17;			//²¹Ç©´ÎÊý    17
	ePriceType_FriendEnergy= 18;		//ºÃÓÑ¾«Á¦	  18
	ePriceType_SourceMapTimes= 19;      //Ãû½«¸±±¾´ÎÊý	  19
	ePriceType_AttackGuildMapTimes = 20; //ÒÑ¹¥´ò¾üÍÅ¸±±¾µÄ´ÎÊý
	ePriceType_NoticeTimes = 21;        //ÒÑÁìÈ¡¹«¸æ½±ÀøµÄ´ÎÊý
	ePriceType_SuppressTerritoryTimes = 22; //¾üÍÅÁìµØÒÑÕòÑ¹±©¶¯´ÎÊý
	ePriceType_DailyDiamonBoxTimes = 23; //Ã¿ÈÕ×êÊ¯ÕÐÄ¼Îä½«´ÎÊý
	ePriceType_FirstCharge = 24; // Ê×³å½±Àø´ÎÊý
	ePriceType_FailTimes = 25; // ´òÖ÷Ïß¸±±¾Ê§°Ü´ÎÊý
	ePriceType_DailyCopperBoxTimes = 26; //Ã¿ÈÕ³é×°±¸´ÎÊý
	ePriceType_GuildWarTimes       = 27; //ÒÑ¹¥´ò¾üÍÅÕ½´ÎÊý
	ePriceType_ResetCrusadeTimes   = 28; //ÖØÖÃÑªÕ½´ÎÊý
	ePriceType_ArenaContinueWin    = 29; //¾º¼¼³¡Á¬Ê¤´ÎÊý
	ePriceType_EpicMapTimes        = 30; //Ê·Ê«¸±±¾ÒÑ¹¥´ò´ÎÊý
	ePriceType_GodMapTimes         = 31; //Éñ½«¸±±¾ÒÑ¹¥´ò´ÎÊý
	ePriceType_TurnTableTimes      = 32; //³é½±´ÎÊý
	ePriceType_ServerWarTimes      = 33; //¿ç·þÕ½ÒÑ¹¥´ò´ÎÊý
	ePriceType_ServerWarWinTimes   = 34; //¿ç·þÕ½Ê¤Àû´ÎÊý
	ePriceType_ServerWarFreeRefreshTimes = 35;//¿ç·þÃâ·ÑË¢ÐÂ´ÎÊý
	ePriceType_ServerWarShop       = 36; //¿ç·þÕ½ÉÌµêË¢ÐÂ´ÎÊý
	ePriceType_GlobalMailTime      = 37; //Í¬²½È«·þÓÊ¼þµÄÊ±¼ä,serverÓÃ
	ePriceType_Charge    = 40; //³äÖµ´ÎÊý
	ePriceType_TombMoveRefreshTime = 41;
	ePriceType_TombItemRefreshTime = 42;
	ePriceType_TombMoveBuyedTimes  = 43; //Ñ°ÁúÐÐ¶¯µã¹ºÂò´ÎÊý
	ePriceType_TombItemBuyedTimes  = 44; //Ñ°ÁúÕ½¶·µã¹ºÂò´ÎÊý
	ePriceType_STeamSourceTimes = 45;  //×é¶ÓÕ½»ñÈ¡×ÊÔ´´ÎÊý
	ePriceType_STeamWinTimes = 46;     //×é¶ÓÕ½Ê¤Àû´ÎÊý
	ePriceType_ServerGlobalShop = 47; //¿ç·þÃëÉ±ÉÌµê
	ePriceType_TombShop = 48;         //Ñ°ÁúÉÌµê
	ePriceType_SecretHoleTimes = 49;  //ÃØ¾³¹¥´ò´ÎÊý
	ePriceType_SecretHoleBox   = 50;  //ÃØ¾³¿ª±¦Ïä
	ePriceType_SecretHoleShop  = 51;  //ÃØ¾³ÉÌµêË¢ÐÂ´ÎÊý
	ePriceType_LegendMapTimes  = 52;  //´«Ëµ¸±±¾ÒÑ¹¥´ò´ÎÊý
	ePriceType_ReturnShop      = 53;  //»Ø¹éÉÌµêË¢ÐÂ´ÎÊý
	ePriceType_DailyAstrologyTimes =54; //Ã¿ÈÕÕ¼ÐÇ´ÎÊý,Ãâ·ÑµÄ²»Ëã
	ePriceType_AttackGuildMapRecoveryTime= 55; //ÏÂ´Î¾üÍÅ´ÎÊý»Ö¸´Ê±¼ä
	ePriceType_SecretHoleEliteTimes= 56; //ÃØ¾³¾«Ó¢¿ÉÌôÕ½´ÎÊý
	ePriceType_SuppressFriendTerritoryTimes=57; //¸öÈËÁìµØÒÑ°ïºÃÓÑÕòÑ¹´ÎÊý
	ePriceType_WakeShop  = 58;         //¾õÐÑÉÌµê  58 
	ePriceType_GeneralShopRecoveryTime = 59; 	//ÏÂ´ÎÃû½«ÉÌµêË¢ÐÂ´ÎÊý»Ö¸´Ê±¼ä
	ePriceType_Ghost = 60; 		// ½«ÁéÉÌµê
	ePriceType_Adventure = 61; 	// ÆæÓöÉÌµê
	ePriceType_Exercise = 62; 	// Ãû½«ÊÔÁ¶Ë¢ÐÂ´ÎÊý
	ePriceType_AttackExercise = 63; 	// Ãû½«ÊÔÁ¶ÌôÕ½´ÎÊý
	ePriceType_WakeShopRecoveryTime = 64;    //ÏÂ´Î¾õÐÑÉÌµêË¢ÐÂ´ÎÊý»Ö¸´Ê±¼ä
	ePriceType_NormalMapReset = 65; //ÆÕÍ¨¸±±¾Ë¢ÐÂ´ÎÊý
	ePriceType_MonthSignInFill = 66; //ÔÂÀúÇ©µ½²¹Ç©´ÎÊý
	ePriceType_Max = 128;
};

enum SourceType  // ×ÊÔ´ÀàÐÍ
{
	SourceType_Invalid	= 0;
	SourceType_Coin		= 1;
	SourceType_Item		= 2;
	SourceType_Hero		= 3;
	SourceType_Equip	= 4;
	SourceType_Card     = 5;
	SourceType_Max		= 6;
};

enum CoinType	// »õ±ÒÀàÐÍ
{
	CoinType_Exp		= 101;
	CoinType_TiLi		= 102;
	CoinType_Copper		= 103; //Í­Ç®
	CoinType_Diamonds	= 104; //×êÊ¯
	CoinType_Conquer	= 105; //¾º¼¼±Ò
	CoinType_Sports		= 106; //Ô¶Õ÷±Ò
	CoinType_Guild		= 107; //¹«»á±Ò(²»ÓÃÁË£¬ºóÃæµÄguilddevoteÌæ´úÁË)
	
	CoinType_Level		= 108;
	CoinType_VipExp		= 109;
	CoinType_VipLevel	= 110;
	CoinType_TiLiMax	= 111;
	CoinType_AvatarId 	= 112;
	CoinType_SkillPoint = 113;
	CoinType_Item		= 114; //ÎïÆ·
	CoinType_Energy		= 115; //¾«Á¦
	CoinType_SkillPointMAX=116;//Ö»clientÓÃ,ÀÏ°æ±¾ÒÅÁôÏÂÀ´µÄ
	CoinType_PlayerGender=117; //Ö»clientÓÃ,ÀÏ°æ±¾ÒÅÁôÏÂÀ´µÄ
	CoinType_JingliMax	 =118; //Ö»clientÓÃ,ÀÏ°æ±¾ÒÅÁôÏÂÀ´µÄ
	CoinType_HeroExp	= 119; //Ö»serverÓÃ,ÓÃ×÷¼ÓÓ¢ÐÛ¾­ÑéµÄ
	CoinType_HeroSoul	= 120; //½«»ê
	CoinType_Recharge	= 121; //³äÖµ
	/*CoinType_RMB		= 201; //ÈËÃñ±Ò*/
	CoinType_BattleValue = 122; // Õ½¹¦
	CoinType_Exploits	        = 123; // ¹¦Ñ«
	CoinType_RebelArmyFree      = 124; // ÅÑ¾ü¿ÉÌôÕ½´ÎÊý
	CoinType_RebelArmyMax       = 125; //clientÓÃ, ÅÑ¾ü×î´ó´ÎÊý
	CoinType_DailyDiamondsConsume=126; //Ã¿ÈÕÏûºÄ×êÊ¯
	CoinType_GuildDevote 		= 127; //¾üÍÅ¹±Ï×, ²»Çå¿Õ
	CoinType_GuildDailyDevote   = 128; //¾üÍÅÃ¿ÈÕ¹±Ï×,ÍË»áÇå0
	CoinType_GuildTotalDevote   = 129; //¾üÍÅ×Ü¹±Ï×,ÍË»áÇå0
	CoinType_DailyRecharge      = 130; //¾üÍÅÃ¿ÈÕ³äÖµ
	CoinType_RaidTeamCount      = 131; //×é¶ÓÃ¿ÈÕ»Ø¸´
	CoinType_TaskScore          = 132; //ÈÎÎñ»ý·Ö 
	CoinType_GuildExp           = 133; //¾üÍÅ¾­Ñé(¾üÍÅµÄ£¬·Ç¸öÈËµÄ)
	CoinType_GuildTechnologyExp = 134; //¾üÍÅ¿Æ¼¼¾­Ñé(¾üÍÅµÄ£¬·Ç¸öÈËµÄ)
	CoinType_Crystal            = 135; //Ë®¾§,×°±¸¾«Á¶ÓÃµÄ
	CoinType_ServerWarHonor     = 136; //¿ç·þÕ½ÈÙÓþ
	CoinType_ServerWarScore     = 137; //¿ç·þÕ½»ý·Ö(Ö»×ö»õ±ÒÏÔÊ¾,server²»ÓÃ)
	CoinType_Charge				= 138; //³äÖµ¼ÛÖµ
	CoinType_TeamScore          = 139; //×é¶ÓÕ½»ý·Ö
	CoinType_TeamHonor          = 140; //×é¶ÓÕ½ÈÙÓþ
	CoinType_Courage            = 141; //ÓÂÆø(Ñ°Áú)
	CoinType_TombMovePoint      = 142; //Ñ°ÁúÐÐ¶¯µã
	CoinType_TombItemPoint      = 143; //Ñ°ÁúÕ½¶·µã
	CoinType_Souljade           = 144; //»êÓñ
	CoinType_ArenaScore         = 145; //¾º¼¼³¡»ý·Ö
	CoinType_ReturnScore        = 146; //»Ø¹é»ý·Ö
	CoinType_PatrolMinutes      = 147; //Ñ²ÂßÊ±¼ä(·ÖÖÓ)
	CoinType_Wake 				= 148; //¾õÐÑ±Ò
	CoinType_GuildMapHarm       = 149; //¾üÍÅ¸±±¾ÉËº¦
	CoinType_Achievement 		= 150; //³É¾ÍÖµ
	CoinType_Ghost 				= 151; //ÁéÓñ
	CoinType_Adventures			= 152; //ÆæÓöµã
	CoinType_Diagram 			= 153; //ÕóÍ¼Öµ(ÕóÍ¼³É¾ÍÖµ)
	CoinType_GuildFame          = 154; //¾üÍÅÃûÍû
	CoinType_Max		        = 155;
};

enum ShopType   // ÉÌµêÀàÐÍ
{
	ShopType_GeneralShop	= 0; //Ãû½«ÉÌµê
	ShopType_RebelShop	    = 1; //½Ë·Ë
	ShopType_BlackShop		= 2; //ºÚÊÐ
	ShopType_SportsShop		= 3; //¾º¼¼³¡
	ShopType_GuildShop		= 4; //¾üÍÅ
	ShopType_CrusadeShop	= 5; //ÑªÕ½
	ShopType_StarShop		= 6; //ÐÇ¼Ê
	ShopType_ArenaRank		= 7; //¾º¼¼ÅÅÃûÉÌµê
	ShopType_GuildLevel		= 8; //¾üÍÅ³É¾ÍÉÌµê
	ShopType_CrusadeMax		= 9; //ÑªÕ½³É¾ÍÉÌµê
	ShopType_Crusade2		= 10; //ÑªÕ½ÉÌµê2
	ShopType_Crusade3		= 11; //ÑªÕ½ÉÌµê3
	ShopType_ServerWar      = 12; //¿ç·þÕ½ÉÌµê
	ShopType_ServerTeam     = 13; //¿ç·þ×é¶ÓÉÌµê
	ShopType_ServerWarGlobal= 14; //¿ç·þÃëÉ±ÉÌµê
	ShopType_Tomb           = 15; //Ñ°ÁúÉÌµê
	ShopType_SecretHole     = 16; //ÃØ¾³ÉÌµê
	ShopType_Return         = 17; //»Ø¹éÉÌµê
	ShopType_SecretHole2    = 18; //ÃØ¾³ÉÌµê2
	ShopType_SecretHole3    = 19; //ÃØ¾³ÉÌµê3
	ShopType_SecretHole4    = 20; //ÃØ¾³ÉÌµê4
	ShopType_HeroWake 		= 21; //¾õÐÑÉÌµê
	ShopType_Activity47Shop = 22; //ÔËÓª»î¶¯µÈ¼¶Àñ°üÉÌµê
	ShopType_Ghost 			= 23; //½«ÁéÉÌµê
	ShopType_Adventures 	= 24; //ÆæÓöÉÌµê
	ShopType_Adventures2    = 25; //ÆæÓöÉÌµê2
	ShopType_Adventures3    = 26; //ÆæÓöÉÌµê3
	ShopType_BlackShop2 	= 27; //ºÚÊÐÉÌµê2
	ShopType_Max			= 28;
};

enum emLobby2ClientErr
{
	L2C_SUCCESS				= 0;
	//·þÎñÆ÷¶ªÊ§
	L2C_DB_LOST				= 1;
	L2C_DB_TIMEDOUT			= 2;
	L2C_DB_EXECERR			= 3;
	L2C_DB_DATA				= 4; // DB Êý¾Ý½âÎö´íÎó

	L2C_GOLD_NOT_ENOUGH		= 5; // ×êÊ¯²»×ã
	L2C_CASH_NOT_ENOUGH		= 6; // Í­Ç®²»×ã
	L2C_ITEM_NOT_FIND		= 7; // µÀ¾ß²»×ã
	L2C_STAMINA_NOT_ENOUGH	= 8; // ÌåÁ¦²»×ã
	L2C_VIP_NOT_ENOUGH		= 9; // VIPµÈ¼¶²»×ã

	//µÇÂ¼Ïà¹Ø
	L2C_VERSION_NOT_MATCH	= 10;	//°æ±¾ºÅ²»Æ¥Åä
	L2C_AUTHERN_ERR			= 11;	//MD5ÑéÖ¤Ê§°Ü
	L2C_LOBBYCREATECHAR_ERR = 12;	//Lobby´´½¨½ÇÉ«Ê§°Ü 
	L2C_DBCREATECHAR_ERR	= 13;	//DB´´½¨½ÇÉ«Ê§°Ü
	L2C_PLAYERLOCK_ERR		= 14;	//Íæ¼ÒÕËºÅÒì³£
	L2C_ROLE_LOGINING		= 15;	//Íæ¼ÒÕýÔÚµÇÂ½ ÉÔºóÖØÊÔ
	L2C_CDING               = 16;   //²Ù×÷´¦ÓÚÀäÈ´×´Ì¬,ÇëÉÔºóÔÙÊÔ
	L2C_QUEUE               = 17;   //ÅÅ¶ÓÖÐ,ÇëÉÔºóÔÙÊÔ

	L2C_HIRE_LIMIT          = 18;  //ÕÐÄ¼´ÎÊýµ½´ïÉÏÏÞ
	//Õ½¶·Á¦ÑéÖ¤Ê§°Ü
	L2C_BATTLE_ERROR        = 19;  //Õ½¶·Á¦ÑéÖ¤Ê§°Ü
	//Îä½«Ïà¹Ø
	L2C_NOT_MAIN_HERO       = 20;  //²»ÄÜÑ¡ÔñÖ÷½«
    L2C_HERO_STAR_MAX       = 21;  //Îä½«ÒÑµ½´ï×î´óÐÇ¼¶
	L2C_HERO_EXIST			= 22;  //Îä½«ÒÑ´æÔÚ
	L2C_HERO_LEVEL_MAX      = 23;  //Ó¢ÐÛµÈ¼¶ÒÑ¾­´ïµ½×î´ó
	L2C_HERO_NOT_EXIST		= 24;  //Îä½«²»´æÔÚ
	L2C_HERO_IN_FORMATION   = 25;  //Îä½«ÔÚÕóÖÐ
	L2C_HERO_FORCE_NOT_ENOUGH=26;  //Îä½«Éñ×ªµÈ¼¶²»×ã
	L2C_HERO_DEIFICATION_MAX =27;  //Îä½«µÄÉñ»¯µÈ¼¶ÒÑ¾­´ïµ½×î´ó
	L2C_HERO_ALREADY_AWAKE  = 28;  //Îä½«ÒÑ¾­»½ÐÑ£¬ÎÞ·¨±»ÔÙ´Î»½ÐÑ
	L2C_LEVEL_LIMIT         = 29;  //µÈ¼¶´ïµ½ÉÏÏÞ
	//±³°üÏà¹Ø
	L2C_DBLOADBAG_ERR		= 30;
	L2C_BAG_NOT_LOAD		= 31;	// ±³°üÎ´¼ÓÔØ
	L2C_BAG_NOT_ENOUGH		= 32;	// ±³°ü¿Õ¼ä²»×ã
	L2C_LOBBYCREATEBAG_ERR	= 33;	// ±³°ü´´½¨Ê§°Ü
	L2C_NAME_REPEATED		= 34;	// Ãû×ÖÖØ¸´
	L2C_PHOTO_REPEATED		= 35;	// Í·ÏñÖØ¸´
	L2C_SKILL_LV_MAX		= 36;	// ¼¼ÄÜµÈ¼¶´ïµ½×î¸ß
	L2C_SKILL_NOT_ENOUGH	= 37;	// ¼¼ÄÜµãÊý²»×ã
	L2C_NAME_LEN_ERROR      = 38;   // Ãû×Ö³¤¶È²»·ûºÏ¹æ¶¨

	// ¸±±¾Ïà¹Ø
	L2C_ENTERCOUNT_MAX		= 40;	//¸±±¾½øÈë´ÎÊý´ïµ½ÉÏÏÞ	(new)
	L2C_ENTERMAP_CD			= 41;	//¸±±¾½øÈëCD			(new)
	L2C_STAR_NOT_ENOUGH		= 42;	//¸±±¾ÆÀ¼Û²»×ã			(new)
	L2C_LEVEL_NOT_ENOUGH	= 43;	//Ó¢ÐÛµÈ¼¶²»×ã			(new)
    L2C_BUYMAPTIMES_LIMIT   = 44;   //¹ºÂò¸±±¾´ÎÊý´ïµ½ÉÏÏÞ
	L2C_MAP_NOT_PASSED      = 45;   //¸±±¾¹Ø¿¨Î´Í¨¹Ø
	L2C_TODAY_NOT_OPEN 		= 46; 	//¸±±¾Î´¿ª·Å
	L2C_MAP_PASSED          = 47;   //¸±±¾ÒÑÍ¨¹Ø

	// ÈÎÎñÏà¹Ø
	L2C_QUEST_NOT_FINISH	= 50;	//ÈÎÎñÎ´Íê³É			(new)
	L2C_QUEST_NOT_FIND		= 51;
	L2C_QUEST_REWARD_GOT   = 52;   //ÈÎÎñ½±ÀøÒÑÁìÈ¡

	L2C_NOT_ONLINE			= 55;	//Ë½ÁÄÄ¿±ê²»ÔÚÏß		(new)
	L2C_DIRTY_WORD			= 56;	//ÆÁ±Î×Ö				(new)
	L2C_NAME_LENGTH			= 57;	//ÆðÃû×Ö³¤¶È²»ºÏ·¨

	// ¾º¼¼³¡
	L2C_OPPONENT_FIGHTING	= 60;	//±»ÌôÕ½µÄÍæ¼ÒÒÑ¾­ÔÚÕ½¶·(new)
	L2C_ENERY_NOT_ENOUGH	= 61;	//¾«Á¦²»×ã
	L2C_ARENA_CANTPKBOSS    = 62;   //²»ÄÜÑ¡ÔñBOSS
	L2C_ARENA_TIMES_LIMIT   = 63;   //ÌôÕ½´ÎÊý´ïµ½ÉÏÏÞ
	L2C_ARENA_RANK_NOT_ENOUGH = 64; //¾º¼¼³¡ÅÅÃû²»×ã

	// ºÃÓÑ
	L2C_ENERGY_ALL_SEND     = 69;   //¾«Á¦ÒÑÈ«²¿ÁìÔù
	L2C_FRIEND_MYSELF		= 70;	//²»ÄÜ¼Ó×Ô¼ºÎªºÃÓÑ
	L2C_ALREADY_FRIEND		= 71;	//¶Ô·½ÒÑ¾­ÊÇºÃÓÑ
	L2C_FRIEND_NUM_MAX		= 72;	//ºÃÓÑÊýÁ¿´ïµ½×î´ó
	L2C_BLACK_LIST			= 73;	//¶Ô·½ºÚÃûµ¥ÖÐ
	L2C_BLACK_LIST_MAX		= 74;	//ºÚÃûµ¥ÒÑÂú
	L2C_FRIEND_NOT_EXISTS	= 75;	//ÉêÇëºÃÓÑ²»´æÔÚ
	L2C_FRIEND_IS_NOT_APPLY	= 76;	//ÉêÇëºÃÓÑµÄID²»ÔÚÉêÇëÁÐ±íÀï
	L2C_FRIEND_PARA_UNVALID = 77;	//ºÃÓÑ²Ù×÷²ÎÊý·Ç·¨
	L2C_BLACK_USER_IS_NOT_FRIEND = 78; //¸ÃÓÃ»§»¹²»ÊÇºÃÓÑ
	L2C_ALREADY_ENERGY_LIMIT = 79;	//¸ÃÓÃ»§ÒÑ¾­ÁìÈ¡×î´ó¾«Á¦
	L2C_NO_FRIEND			 = 80;	//Ã»ÓÐºÃÓÑ

	// ÐÂ×°±¸
	L2C_STRENG_MAX			= 81;	//Ç¿»¯µÈ¼¶×î´ó
	L2C_REFINE_MAX			= 82;	//¾«Á¶µÈ¼¶×î´ó
	L2C_EQUIP_NOT_FOUND		= 83;

	L2C_GOODS_NOT			= 91;	// ÉÌ³ÇÎïÆ·²»´æÔÚ
	L2C_LIMIT_ERROR			= 92;	// ÒÑ´ïµ½ÏÞÖÆ


	//µÀ¾ß
	L2C_ITEM_NOT_ENOUGH		= 100; // µÀ¾ß²»×ã
	L2C_ITEM_USE_RESTRICT   = 101; // Î´´ïµ½µÀ¾ßµÄÊ¹ÓÃÌõ¼þ
	L2C_EFFECT_NOT_ENOUGH   = 102; // Õ½¶·Á¦²»×ã
	L2C_GENDER_ERROR        = 103; // ÐÔ±ð´íÎó
	L2C_ITEM_CANNOT_USE     = 104; // µÀ¾ß²»ÄÜÊ¹ÓÃ

	//ÑªÕ½
	L2C_CRUSADE_SWEEP_OVER      = 106; //ÑªÕ½É¨µ´Íê³É
	L2C_CRUSADE_MAX_NOT_ENOUGH  = 107;  //Õ½²ãÊý²»×ã
	L2C_CRUSADE_ALL_PASSED      = 108; //ÑªÕ½ÒÑÍ¨¹Ø
	L2C_CRUSADE_ERROR           = 109; //ÑªÕ½ÕÂ½Ú´íÎó
	L2C_PLAYER_LEVEL_NOT_ENOUGH = 110; //µÈ¼¶²»×ã
	L2C_REWARD_ALREADY_GOT		= 111; //½±ÀøÒÑÁìÈ¡
	L2C_EXPEDITION_CHAPTER_ERROR= 112; //ÑªÕ½ÕÂ½Ú´íÎó
	L2C_EXPEDITION_SWEEP_CDING  = 113; //ÑªÕ½É¨µ´cdÖÐ

	
	//ÔËÓª»î¶¯
	L2C_PASSWORD_TIMEOUT        = 114; //¸ÃÃÜÂë²»ÔÚÓÐÐ§ÆÚÄÚ
	L2C_PASSWORD_LIMIT          = 115; //¸ÃÃÜÂë½±ÀøÒÑ±»ÁìÈ¡Íê±Ï
	L2C_PASSWORD_USED           = 116; //¸ÃÃÜÂëÒÑ±»Ê¹ÓÃ¹ý
	L2C_PASSWORD_ERROR          = 117; //ÎÞÐ§µÄÃÜÂë
	L2C_CHANNEL_ERROR           = 118; //ÇþµÀºÅ²»Í¬
	L2C_GIFTCODE_GOT_LIMIT      = 119; //¸ÃÀàÐÍµÄÀñÆ·ÒÑÁìÈ¡´ïµ½ÉÏÏÞ
	L2C_ACTIVITY_NOT_EXIST		= 120; //»î¶¯²»´æÔÚ
	L2C_ACTIVITY_NOT_INTIME		= 121; //²»ÔÚ»î¶¯Ê±¼äÄÚ
	L2C_ACTIVITY_REWARD_GOT		= 122; //»î¶¯½±ÀøÒÑÁìÈ¡
	L2C_ACTIVITY_VALUE_NOT_ENOUGH=123; //»î¶¯Ìõ¼þÎ´´ïµ½
	L2C_ACTIVITY_CODE_NOT_EXIST	= 124; //ÀñÆ·Âë²»´æÔÚ
	L2C_ACTIVITY_REBATE_BUYED	= 125; //»ù½ðÒÑ¹ºÂò
	L2C_ACTIVITY_RECOMMID_ERROR	= 126; //ÎÞÐ§µÄÍÆ¼öÂë
	L2C_ACTIVITY_RECOMMID_NOTSELF=127; //ÍÆ¼öÂë²»ÄÜÎª×Ô¼º
	L2C_ACTIVITY_DEVICE_SAME    = 128; //Éè±¸ºÅÏàÍ¬,²»ÄÜÍÆ¼ö
	L2C_ACTIVITY_CODE_GOT       = 129; //ÀñÆ·ÂëÒÑ±»Ê¹ÓÃ

	L2C_CHAPTER_STAR_NOT_ENOUGH = 130; //ÕÂ½ÚÐÇ¼¶²»×ã
	L2C_CHAPTER_BOX_GOT			= 131; //ÕÂ½Ú±¦ÏäÒÑÁìÈ¡
	L2C_SEVENDAY_NOT_COMPELETE	= 132; //ÆßÈÕ»î¶¯Ã»ÓÐÍê³É
	L2C_SEVENDAY_NOT_TIME		= 133; //ÆßÈÕ»î¶¯°ë¼Û¹ºÂò²»ÔÚ»î¶¯Ê±¼ä
	L2C_SEVENDAY_NOT_REMAIN		= 134; //ÆßÈÕ»î¶¯°ë¼Û¹ºÂòÃ»ÓÐÊ£Óà
	L2C_SEVENDAY_USER_ALREADY	= 135; //°ë¼Û¹ºÂò ¸ÃÓÃ»§ÒÑ¾­Âò¹ý
	L2C_REBELARMY_BOSS_NOT_ALIVE = 136; // ÅÑ¾üboss ÒÑ¾­±»»÷É±»òÕßµ½Ê±¼äÁË
	L2C_REBELARMY_BOSS_ATTACKING = 137; // ÅÑ¾üboss ÕýÔÚ±»¹¥»÷
	L2C_REBELARMY_BOSS_NO_SHARE  = 138; // ÅÑ¾üboss Î´¹²Ïí
	L2C_REBELARMY_FREE_NOT_ENOUGH = 139; // ÅÑ¾üÃâ·Ñ´ÎÊý²»×ã
	L2C_TARGET_USER_NOT_EXISTS = 140; // ÇëÇóµÄÓÃ»§²»´æÔÚ

	//ÅÅÐÐ°ñ
	L2C_RANK_OUT			= 150;		//Î´ÉÏ°ñ
	L2C_ACHIEVE_NOT_COMPLETE = 155;		//³É¾ÍÃ»ÓÐ´ï³É
	L2C_ACHIEVE_NOT_SELF	= 156;		//²»ÄÜÁìÈ¡¸Ã³É¾Í½±Àø
	L2C_ACHIEVE_GOT			= 157;		//³É¾Í½±ÀøÒÑÁìÈ¡

	//ÁÄÌì
	L2C_CHAT_LOCK           = 160;  //½ûÑÔÆÚ¼ä²»ÄÜÁÄÌì
	L2C_CHAT_TIMEING        = 161;  //·¢ÑÔÌ«¹ýÆµ·±
	L2C_CHAT_LEVEL_NOT_ENOUGH = 162; //ÁÄÌìµÈ¼¶²»×ã20¼¶

	L2C_GUILD_MAP_NOT_ATTACK   = 163; //Ã»ÓÐ¹¥´ò¸Ã¾üÍÅ¸±±¾
	L2C_GUILD_MAP_TIME_ERROR   = 164; //¾üÍÅ¸±±¾Î´¿ª·Å
	L2C_GUILD_LEVEL_NOT_ENOUGH = 165; //¹«»áµÈ¼¶²»×ã
	L2C_GUILD_MAP_ATTACK_LIMIT = 166; //¹¥´ò¸±±¾´ïµ½ÉÏÏÞ
	L2C_GUILD_MAP_REWARD_JOINNEW=167; //ÐÂ³ÉÔ±²»ÄÜÁìÈ¡±¦Ïä
	L2C_GUILD_MAP_REWARD_OTHER = 168; //±¦ÏäÒÑ±»ÆäËû³ÉÔ±ÁìÈ¡
	L2C_GUILD_MAP_ATTACK_TIMEOUT = 169; //¹¥´ò¸±±¾³¬Ê±
	//¾üÍÅ
	L2C_GUILD_NOT_EXIST     = 170;  //¾üÍÅ²»´æÔÚ
	L2C_GUILD_JOB_NOT_ENOUGH= 171;  //¾üÍÅÈ¨ÏÞ²»×ã
	L2C_GUILD_ALREADY_EXIST = 172;  //ÒÑ¼ÓÈëÁË¾üÍÅ
	L2C_GUILD_MEMBER_FULL   = 173;  //¾üÍÅ³ÉÔ±ÒÑÂú
	L2C_GUILD_CANT_QUIT     = 174;  //²»ÄÜÍË³ö¾üÍÅ
	L2C_GUILD_MEMBER_NOT_EXIST=175; //¾üÍÅ³ÉÔ±²»´æÔÚ
	L2C_GUILD_DEPUTY_FULL   = 176;  //¸±ÍÅ³¤Ãû¶îÒÑÂú
	L2C_GUILD_APPLY_FULL    = 177;  //ÉêÇëÁÐ±íÒÑÂú
	L2C_GUILD_RITUAL_DONE   = 178;  //½ñÌìÒÑ¼Àìë¹ý
	L2C_GUILD_REWARD_GOT    = 179;  //½±ÀøÒÑÁìÈ¡
	L2C_GUILD_REWARD_NOT_ENOUGH=180;//Î´´ïµ½ÁìÈ¡Ìõ¼þ
	L2C_GUILD_MAP_SELECT_ERROR=181; //Î´´ïµ½¿ªÆôÌõ¼þ
	L2C_GUILD_MAP_SELECT_DONE= 182; //¾üÍÅ¸±±¾ÒÑ¿ªÆô
	L2C_GUILD_MAP_PASSED     = 183; //¾üÍÅ¸±±¾ÒÑÍ¨¹Ø
	L2C_GUILD_MAP_ERROR      = 184; //ÇëÑ¡ÔñÕýÈ·µÄ¸±±¾¹Ø¿¨
	L2C_GUILD_MAP_ATTACKING  = 185; //ÓÐ³ÉÔ±ÕýÔÚ¹¥´ò¸±±¾
	//×é¶Ó
	L2C_RAID_TEAM_ALREADY_APPLY = 186; // ÒÑ¾­ÓÐÍæ¼ÒÇëÇó¹ý
	L2C_RAID_TEAM_IN_REQUEST = 187;	//¸ÃÍæ¼Ò×é¶ÓÕ½¶·»òÕßÔÚÉêÇë×é¶ÓÓÐÐ§ÆÚÖÐ
	L2C_RAID_TEAM_ALREADY_JOIN = 188; // ¸ÃÍæ¼ÒÒÑ¾­¼ÓÈëÆäËü¶ÓÎéÖÐ
	L2C_RAID_TEAM_NOT_ONLINE = 189; // ¸ÃÍæ¼ÒÒÑ¾­ÏÂÏß
	L2C_RAID_TEAM_LV_NOT_ENOUGH = 190; // µÈ¼¶²»×ã
	L2C_RAID_TEAM_OPEN_TIME = 191; // Ã»µ½¿ª·ÅÊ±¼ä
	L2C_RAID_TEAM_ALREADY_CREATE = 192; // ¶ÓÎéÒÑ¾­½¨Á¢¹ýÁË
	L2C_RAID_TEAM_ALREADY_TEAM = 193; // ¸ÃÈËÒÑ¾­ÔÚ¶ÓÎéÀïÁË
	L2C_RAID_TEAM_NOT_CREATE = 194; // ¶ÓÎé»¹Ã»ÓÐ½¨Á¢¹ýÁË
	L2C_RAID_TEAM_NOT_TEAM = 195; // ¸ÃÈË»¹Ã»ÓÐÔÚ¶ÓÎéÀï  
	L2C_RAID_TEAM_NOT_LEADER = 196; // ²»ÊÇ¶Ó³¤ Ã»ÓÐÈ¨ÏÞ×öÕâ¸ö 
	L2C_RAID_TEAM_KICKED_NOT_TEAM = 197; // ±»Ìß³öµÄÈË²»ÔÚÕâ¸ö¶ÓÎéÀï
	L2C_RAID_TEAM_NOT_ENOUGH_NUMBER = 198; // Ã»ÓÐ×ã¹»µÄ´ÎÊý
	L2C_RAID_TEAM_APPLY_UNVALID	= 199; // ÉêÇëÒÑ¾­Ê§Ð§
	
	L2C_MONTHCARD_END			= 200; // ÔÂ¿¨ÒÑ¾­µ½ÆÚÁË
	L2C_MONTHCARD_ALREADY		= 201; // ÔÂ¿¨ÒÑ¾­Áì¹ýÁË
	L2C_ONLINETIME_NOT_ARRIVE	= 202; // ÔÚÏßÀñ°ü Ê±¼äÎ´µ½
	L2C_ONLINEPRIZE_ALREADY		= 203; // ÔÚÏßÀñ°üÒÑ¾­ÁìÈ¡
	L2C_GETREWARD_NOT_ENOUGH    = 204; //Î´´ïµ½ÁìÈ¡½±ÀøµÄÌõ¼þ

	L2C_ROB_BOX_ERR				= 210;	// Õ½¶·»¹Ã»ÓÐ½á¹û ¾Í½øÐÐ³é½±
	L2C_ROB_AVOID_TIME			= 211;	// ÃâÕ½Ê±¼ä»¹Ã»ÓÐ½áÊø ÎÞ·¨ÔÙ´ÎÊ¹ÓÃ
	L2C_ROB_DST_AVOID_TIME		= 212;	// ¶Ô·½´¦ÓÚÃâÕ½Ê±¼ä
	L2C_ROB_ONEKEY_ERROR        = 213;  // Ò»¼ü¶á±¦³ö´í
	
	L2C_NOTICE_TIMEOUT          = 220; //¹«¸æºì°üÒÑ¹ýÆÚ
	L2C_NOTICE_NO_ITEM          = 221; //¹«¸æÃ»ÓÐºì°ü½±Àø
	L2C_NOTICE_ITEM_OVER        = 222; //¹«¸æºì°üÒÑ±»Áì¹â
	L2C_NOTICE_ITEM_GOT         = 223; //¹«¸æºì°üÒÑÁìÈ¡
	L2C_NOTICE_ITEM_LIMIT       = 224; //½ñÈÕÒÑÁìÈ¡ºì°ü´ïµ½ÉÏÏÞ
	
	L2C_GUILD_TERRITORY_PATROLED=230;  //¾üÍÅÁìµØÒÑÓÐÎä½«Ñ²Âß
	L2C_GUILD_TERRITORY_HERO_PATROLING=231; //Îä½«ÒÑÔÚÑ²ÂßÖÐ
	L2C_GUILD_TERRITORY_NOT_EXIST=232; //¾üÍÅÁìµØ²»ÔÚÑ²Âß×´Ì¬
	L2C_GUILD_TERRITORY_NOT_FINISHED =233; //¾üÍÅÁìµØÑ²ÂßÎ´Íê³É
	L2C_GUILD_TERRITORY_NOT_RIOTING= 234; //¾üÍÅÁìµØÎ´´¦ÓÚ±©ÂÒ×´Ì¬
	L2C_GUILD_TERRITORY_SUPPRESS_LIMIT= 235; //¾üÍÅÁìµØÕòÑ¹´ÎÊý´ïµ½ÉÏÏÞ
	L2C_GUILD_TERRITORY_FINISHED =236; //¾üÍÅÁìµØÑ²ÂßÍê³É

	L2C_ITEM_GLOBAL_LIMIT = 240; //µÀ¾ß¿â´æ²»×ã
	L2C_ITEM_PLAYER_LIMIT = 241; //¸öÈË¶Ò»»µÀ¾ß´ïµ½ÉÏÏÞ
	L2C_ITEM_USED_LIMIT = 242; //¸ÃµÀ¾ßÒ»´ÎÖ»ÔÊÐíÊ¹ÓÃÒ»¸ö

	L2C_GUILD_TECHNOLOGY_LEVEL_NOT_ENOUGH = 250; //¾üÍÅ¿Æ¼¼µÈ¼¶²»×ã
	L2C_GUILD_TECHNOLOGY_EXP_NOT_ENOUGH = 251; //¾üÍÅÎï×Ê²»×ã
	L2C_GUILD_SKILL_UNLOCKED = 252;            //¾üÍÅ¼¼ÄÜÒÑ½âËø
	L2C_GUILD_SKILL_LOCKED   = 253;            //¾üÍÅ¼¼ÄÜÎ´½âËø
	L2C_GUILD_WAR_NOT_OPENING =254;            //¾üÍÅÕ½Î´¿ªÆô
	L2C_GUILD_WAR_ENEMY_SELECTED =255;         //¾üÍÅÕ½¶ÔÊÖÒÑÑ¡È¡
	L2C_GUILD_WAR_ENEMY_CANT_SELECT =256;      //²»ÊÇ¿ÉÑ¡È¡µÄ¾üÍÅÕ½¶ÔÊÖ
	L2C_GUILD_WAR_ENEMY_NOT_SELECT = 257;      //Ã»ÓÐÑ¡È¡¾üÍÅÕ½¶ÔÊÖ
	L2C_GUILD_WAR_OPPONENT_ERROR   = 258;      //ÎÞÐ§µÄ¾üÍÅÕ½¶ÔÊÖ
	L2C_GUILD_WAR_ATTACK_TIMEOUT   = 259;      //¾üÍÅÕ½¹¥»÷³¬Ê±
	L2C_GUILD_WAR_JOIN_ERROR       = 260;      //¾üÍÅÈËÊý²»×ã»ò´´½¨Ê±¼äÌ«Íí
	L2C_GUILD_WAR_ATTACK_LIMIT     = 261;      //¾üÍÅÕ½¹¥´ò´ÎÊý´ïµ½ÉÏÏÞ
	L2C_GUILD_EXP_NOT_ENOUGH      = 262;       //¾üÍÅ¾­Ñé²»×ã

	L2C_MAIL_ITEM_NOTGOT           = 270;      //ÓÊ¼þÎïÆ·Î´ÁìÈ¡

	L2C_TOMB_EVENT_NOT_DONE  = 271;         //Ñ°ÁúÊÂ¼þÎ´´¦ÀíÍê³É
	L2C_TOMB_MOVE_LIMIT      = 272;         //Ã»ÓÐÐÐ¶¯µãÁË

	L2C_RAID_TEAM_FULL = 300;				// ×é¶ÓÈËÒÑÂú
	L2C_BATTLE_NOT_SKIP = 301;				// Õ½¶·²»·ûºÏÌø¹ýÌõ¼þ

	L2C_HANDBOOK_MAX_LV	= 320;				// Í¼¼øµÈ¼¶Âú¼¶

	L2C_SWAR_TIME_ERROR = 330;              // ¿ç·þÕ½Î´¿ªÆô
	L2C_SWAR_REG_DONE   = 331;              // »ý·ÖÕ½ÒÑ±¨Ãû
	L2C_SWAR_NOT_REG    = 332;              // Ã»ÓÐ±¨Ãû»òÃ»ÓÐ²ÎÈü×Ê¸ñ 
	L2C_SWAR_FIGHTING   = 333;              // ÕýÔÚÕ½¶·ÖÐ
	L2C_SWAR_NO_ENEMY   = 334;              // Ã»ÓÐÑ¡Ôñ¶ÔÊÖ
	L2C_SWAR_ENEMY_WINED= 335;              // ÒÑÕ½Ê¤ÁË¶ÔÊÖ
	L2C_SWAR_REFRESH_LIMIT=336;             // ¿ç·þÕ½Ë¢ÐÂ´ÎÊý´ïµ½ÉÏÏÞ
	L2C_SWAR_ATTACK_LIMIT=337;              // ¿ç·þÕ½¹¥´ò´ÎÊý´ïµ½ÉÏÏÞ
	L2C_SWAR_ENEMY_ERROR =338;              // ²»ÊÇ¿É¹¥´òµÄÄ¿±ê 
	
	L2C_FRIEND_LEVEL_NOT_ENGOUH = 339;      // ºÃÓÑµÈ¼¶²»×ã
	L2C_STEAM_IN_TEAM   = 340;              // ÒÑ¾­ÔÚ×é¶ÓÖÐ
	L2C_STEAM_WAITING_EMPTY = 341;          // Ã»ÓÐÕýÔÚµÈ´ýµÄ×é¶Ó	
	L2C_STEAM_FULL      = 342;              // ¶ÓÎéÒÑÂú
	L2C_STEAM_NOT_EXIST = 343;              // ¶ÓÎé²»´æÔÚ
	L2C_STEAM_NOT_LEADER = 344;             // Ö»ÓÐ¶Ó³¤²ÅÄÜ×ö´Ë²Ù×÷
	L2C_STEAM_NOT_ALLREADY=345;             // ÓÐ³ÉÔ±»¹Ã»ÓÐ×¼±¸
	L2C_STEAM_NOT_FULL   = 346;             // ×é¶Ó»¹Ã»ÓÐÂúÔ±
	L2C_STEAM_WAITING    = 347;             // µÈ´ýÕ½¶·ÖÐ
	L2C_STEAM_NOT_INTIME = 348;             // ×é¶ÓÕ½Î´¿ªÆô
	L2C_STEAM_INVITE_CD  = 349;             // Ò»¼üÑûÇëCDÖÐ

	L2C_SECRETHOLE_SELECTED = 350;          // ÒÑÑ¡ÔñÃØ¾³
	L2C_SECRETHOLE_NOT_SELECT = 351;        // Î´¿ªÆôÃØ¾³
	L2C_SECRETHOLE_CANT_SELECT= 352;        // ÇëÍ¨¹ØÇ°ÃæµÄÃØ¾³ 
	L2C_SECRETHOLE_PASSED = 353;            // ÃØ¾³ÒÑÍ¨¹Ø
	L2C_SECRETHOLE_ATTACK_ERROR = 354;      // Õ½¶·Êý¾ÝÒì³£
	L2C_SECRETHOLE_OPENBOX_ERROR= 355;      // Î´´ïµ½¿ª±¦ÏäµÄÌõ¼þ
	L2C_SECRETHOLE_OPENBOX_LIMIT = 356;     // ¿ª±¦Ïä´ÎÊý´ïµ½ÉÏÏÞ
	L2C_SECRETHOLE_ATTACK_LIMIT = 357;      // ½øÈëÃØ¾³´ÎÊý´ïµ½ÉÏÏÞ
	L2C_SECRETHOLE_STARS_NOT_ENOUGH=358;    // ÃØ¾³ÐÇÊý²»×ã
	L2C_SECRETHOLE_GOODS_NULL = 359;        // Ã»ÓÐ¿É¹ºÂòµÄÉÌÆ·

	L2C_AUCTION_OVER      	= 360; 			//Ò»ÔªÃëÉ±»î¶¯Î´¿ªÆô
	L2C_AUCTION_TOTAL_LIMIT = 361; 			//Ò»ÔªÃëÉ±»î¶¯×ÜÊýÁ¿ÒÑ±»¹ºÂò
	L2C_AUCTION_ONE_LIMIT = 362; 			//Ò»ÔªíµËµ»î¶¯¸öÈË¹ºÂòÉÏÏÞ
	L2C_SECRETHOLE_FLOOR_NOT_ENOUGH = 364;  //ÃØ¼®¹ØÊý²»×ã
	
	L2C_ARENASCORE_NOT_ENOUGH = 365;        //¾º¼¼³¡»ý·Ö²»×ã
	L2C_ARENASCORE_ALL_GOT    = 366;        //½±ÀøÒÑÁìÈ¡Íê±Ï
	
	L2C_RETURNSYSTEM_NOTTIME  =370;         //»Ø¹éÏµÍ³ÒÑ½áÊø
	L2C_ASTROLOGYLUCKY_NOT_ENOUGH = 371;    //Õ¼ÐÇÐÒÔËÖµ²»×ã
	L2C_ASTROLOGYCOUNTRY_ERROR = 372;       //Ñ¡ÔñµÄÎä½«ÕóÈÝ´íÎó
	L2C_TERRITORY_NOT_PASSED   = 373;       //ÁìµØÃ»ÓÐÍ¨¹Ø
	L2C_PLAYER_TERRITORY_PATROLED=374;      //ÁìµØÒÑ×¤ÊØ
	L2C_PLAYER_TERRITORY_HERO_PATROLING = 375; //Îä½«ÒÑÔÚÑ²ÂßÖÐ
	L2C_TERRITORY_NOT_OVER     = 376;      //ÁìµØÑ²ÂßÃ»ÓÐÍê³É
	L2C_PATROL_NOT_ENOUGH      = 377;      //Ñ²ÂßÊ±¼ä²»×ã
	L2C_ATTACK_TIMES_NOT_ENOUGH = 378; 			// ÌôÕ½´ÎÊý²»×ã
	L2C_SECRETHOLE_CANNOT_ATTACK_ID = 379; 		//´óÃØ¾³¾«Ó¢ÌôÕ½²»ÄÜÌôÕ½µ±Ç°¹Ø¿¨
	L2C_HEROWAKE_EQUIP_NOT_ENOUGH 	= 380; 		//Îä½«¾õÐÑ×°±¸²»×ã
	L2C_HEROWAKE_EQUIP_NOT_NEED 	= 381; 		//Îä½«¾õÐÑÏÂÒ»µÈ¼¶²»ÐèÒª¸Ã×°±¸
	L2C_HEROWAKE_EQUIP_WEARED 		= 382; 		//Îä½«ÒÑ´©´÷¸Ã×°±¸
	L2C_HEROWAKE_GOODS_MARKED 		= 383; 		//ÉÌÆ·ÒÑ±»±ê¼Ç
	L2C_HEROWAKE_GOODS_NOT_MARK 	= 384; 		//¸ÃÉÌÆ·Î´±»±»±ê¼Ç
	L2C_HEROWAKE_HAS_NO_OPERATE 	= 385; 		//±ê¼Ç¹¦ÄÜÖÐ Ã»ÓÐ¸Ã²Ù×÷ÀàÐÍ (²Ù×÷£º 1 Ìí¼Ó±ê¼Ç£¬   2 É¾³ý±ê¼Ç)
	L2C_HEROWAKE_MAX_LEVEL 			= 386; 		//¾õÐÑ´ïµ½×î´óµÈ¼¶
	L2C_MARKITEM_MAX_NUM 			= 387; 		//ÉÌÆ·±ê¼ÇÒÑ´ïÉÏÏÞ
	L2C_HEROWAKE_NO_EQUIP_WEAR 		= 388; 		//Ã»ÓÐ×°±¸¿É´©£¨Ò»½¡×°±¸£©

	L2C_DiagramLevel_Max 			= 389; 		//ÕóÍ¼ÒÑÉýµ½×î´óµÈ¼¶
	L2C_NOT_ACTIVATE_PRE_ACHIEVE 	= 390; 		//Î´¼¤»îÉÏÒ»¸ö³É¾Í
	L2C_CHAPTER_UNLOCK 				= 391; 		//ÕóÍ¼ÕÂ½ÚÎ´½âËø
	L2C_REFRESH_TIMES_NOT_ENOUGH 	= 392; 		// Ë¢ÐÂ´ÎÊýÒÑ´ïÉÏÏÞ
	L2C_NOT_ACTIVE_TITLE 			= 393; 		//Î´¼¤»î¸Ã³ÆºÅ
	L2C_HAS_NO_BOSS 				= 394; 		//Î´Ë¢³ö¸Ãboss
	L2C_BOSS_BE_DEFEATED 			= 395; 		//bossÒÑ¾­±»´ò°Ü
	L2C_DIAGRAMVALUE_NOT_ENOUGH 	= 396; 		//ÕóÍ¼Öµ²»×ã
	L2C_ACTIVED_ACHIEVE 			= 397; 		//¸ÃÕóÍ¼³É¾ÍÒÑ¼¤»î
	L2C_TIMEOUT             = 400;          //ÒÑ¹ýÆÚ

	L2C_NO_QUEST 			= 401;
 	L2C_REWARD_NONE         = 405;          //Ã»ÓÐ¿ÉÁìÈ¡µÄ½±Àø
	L2C_TIME_NOT_ENOUGH 	= 403; 			//µÇÂ¼Ê±¼äÎ´µ½
	L2C_TODAY_GOT 			= 404; 			//½ñÈÕ½±ÀøÒÑÁìÈ¡
	L2C_NO_PRIVILEGE 		= 407; 			//Ã»ÓÐÁìÈ¡È¨ÏÞ
	L2C_OFFLINEEXP_NONE 	= 408; 			//Ã»ÓÐ¾­Ñé¿ÉÁìÈ¡

	L2C_SIGNIN_ALREADY      = 410;          //ÒÑÇ©µ½
	L2C_NO_CHATPASSWORD		= 411; 			//¸ÃÃØ¼®²»´æÔÚ
	
	L2C_CLIENT_NOT_ACTIVE   = 1001;         //¿Í»§¶Ë²»»îÔ¾
	L2C_CLIENT_KICKED_OTHER = 1002;         //ÕËºÅÔÚ±ð´¦µÇÂ¼
	L2C_LOAD_CHARINFO_FAILED= 1003;         //¼ÓÔØ½ÇÉ«»ù´¡ÐÅÏ¢Ê§°Ü
	L2C_LOAD_BAG_FAILED     = 1004;         //¼ÓÔØ½ÇÉ«±³°üÐÅÏ¢Ê§°Ü
	L2C_LOAD_ADVANCEINFO_FAILED=1005;       //¼ÓÔØ½ÇÉ«¸ß¼¶ÐÅÏ¢Ê§°Ü
	L2C_KIECKED_BYGM        = 1006;         //ÕËºÅ±»GM½ûÖ¹µÇÂ¼
	L2C_LOGIN_STATUS_ERROR  = 1007;         //ÕËºÅµÇÂ¼×´Ì¬Òì³£
	L2C_SERVER_LOADDB_ERROR = 1008;         //·þÎñÆ÷¼ÓÔØÊý¾ÝÊ§°Ü
	
	L2C_NOT_GM 				= 1010; 		// Ã»ÓÐGMÈ¨ÏÞ
	L2C_AUTH_SEQUENCE       = 1011;   		// Çë°´´ÎÐòÇëÇóµÇÂ½

	//Î´Öª´íÎó
	L2C_SYS_ERROR			= 1020;	// ÏµÍ³´íÎó
	L2C_CSV_ERROR			= 1021;	// Åä±í´íÎó
	L2C_PARA_INVALID		= 1022;	// ²ÎÊý´íÎó
	L2C_INVALID_CMD			= 1023;
	L2C_MAX_ERROR			= 1024;

};

message ClientFriendInfo
{
	required uint64	charId		= 1;
	required bytes	charName	= 2;
	required uint32	photo		= 3;
	required uint32	charLevel	= 4;
	required uint32	effect		= 5; // Õ½¶·Á¦
	required uint32	vipLevel	= 6;
	required bytes	guildName	= 7;
	required bool	bSend		= 8; // ÊÇ·ñËÍ¾«Á¦
	required uint32	receive		= 9; // ÊÕ¾«Á¦ 0 Î´ËÍ  1 Î´ÊÕ 2 ÒÑÊÕ
	required uint32 loginTime	= 10; // ×î½üµÇÂ¼Ê±¼ä
};

// Ó¢ÐÛ
message ClientBattleHero
{
	required uint32			templateId		= 1;	// Ä£°åID
	required uint32			level			= 2;	// µÈ¼¶
	required uint32			evolutionLevel	= 3;	// ÐÇ¼¶
	required uint32			forceLevel		= 4;	// Ç¿»¯
	repeated HeroEquipInfo	equip			= 5;	// ×°±¸
	repeated uint32			skillLevel		= 6;	// ¼¼ÄÜµÈ¼¶
	optional bytes			heroName		= 7;	// Ó¢ÐÛÃû×Ö
	repeated HeroEquipNew	equipNew		= 8;	// Ó¢ÐÛÐÂ×°±¸
	optional uint32         isFashion       = 9;    // Ê±×°
	optional uint32         postion         = 10;   // Õ¾Î»0-5
	required uint32			effect			= 11;	// Õ½¶·Á¦
	optional uint32         deificationlevel= 12;   // »¯ÉñµÈ¼¶
	optional uint32         wingslevel      = 13;   // ³á°òµÈ¼¶
	optional string         attr            = 14;   // ÊôÐÔ,Èç¹û²»Îª¿ÕÔòÓÃattr,ÉÏÃæµÄËùÓÐ¶¼Ö»×öÏÔÊ¾²»×öÔËËã
	optional uint32         wakeLevel       = 15;   //¾õÐÑµÈ¼¶
	repeated uint32         wakeEquips      = 16;   //¾õÐÑ×°±¸
	optional WakeAttr 		property		= 17;
};
message GuildSkill
{
	required uint32 id    = 1;
	required uint32 level = 2;
};
message ClientBattlePlayer
{
	required uint64 charId  	= 1;
	required string charName 	= 2;
	required uint32 charLevel   = 3;
	required uint32 photo   	= 4;
	required uint32 effect 		= 5; // Õ½¶·Á¦
	required uint32 vipLevel 	= 6;
	required uint32 position 	= 7; //¹ÙÖ°
	required uint32 isRobot 	= 8; // ÊÇ·ñ»úÆ÷ÈË
	optional uint32 guild_job   = 9;
	optional bool   online      = 10;
	repeated ClientBattleHero hero = 11;
	repeated ClientBattleHero assist_hero = 12; //ÖúÕóÓ¢ÐÛ
	repeated GuildSkill guild_skill = 13; //¾üÍÅ¼¼ÄÜ
	optional uint32 server_id   = 14;
	optional string server_name = 15;
	repeated ClientHandBook handbook = 16; // Éñ×° Ò²½ÐÍ¼¼ø
	repeated uint32 fashionHero = 17;  //¼¤»îÁËÊ±×°µÄÓ¢ÐÛ
	optional string guild_name  = 18;
	optional uint32 steamwin    = 19; //¿ç·þ×é¶ÓÕ½Ê¤Àû´ÎÊý
	repeated uint32 secrethole_buff = 20; //ÃØ¾³buff
	optional uint32 cheerid 	= 21;
	repeated uint32 activeTitleId 	= 22; //ÒÑ¼¤»î³ÆºÅ
	repeated bool   privilege   = 23; //ÌØÈ¨¿¨
};
message ClientRaidTeamHeroInfo 
{
	required uint32 heroIndex = 1;
	required uint32 isFashion = 2;
	required uint32	evolutionLevel	= 3;		// ÐÇ¼¶
	required uint32	forceLevel		= 4;		// Ç¿»¯
	required uint32 position		= 5;		// Î»ÖÃ
	optional uint32 deificationlevel= 6;   // »¯ÉñµÈ¼¶
	optional uint32 wingslevel = 7;
};
message ClientRaidTeamInfo
{
	required uint64	charId		= 1;
	required bytes	charName	= 2;
	required uint32	photo		= 3;
	required uint32	charLevel	= 4;
	required uint32	effect		= 5; // Õ½¶·Á¦
	required uint32	vipLevel	= 6;
	required bytes	guildName	= 7;
	required bool	bSend		= 8; // ÊÇ·ñËÍ¾«Á¦
	required uint32	receive		= 9; // ÊÕ¾«Á¦ 0 Î´ËÍ  1 Î´ÊÕ 2 ÒÑÊÕ
	required uint32 loginTime	= 10; // ×î½üµÇÂ¼Ê±¼ä
	repeated ClientRaidTeamHeroInfo hero = 11;
};

//0000-2400
message TodayTime
{
  required uint32 beginTime = 1;
  required uint32 endTime   = 2;
}
message SourceList
{
  repeated ClientSource source = 1;
}
message ClientMonthCard
{
	required uint32 index = 1;
	required uint32 startTime = 2;
	required uint32 getTime = 3;
}
message ClientItemLimit
{
	 required uint32 id = 1;
	 required uint32 limit = 2;
	 required uint32 got = 3;
}
message LString
{
	required string str  = 1;
	optional uint32 type = 2;
}
message IntList
{
	repeated uint32 value = 1;
}
message ClientActivity
{
  required uint32		id					= 1;
  optional uint32		closed				= 2;
  optional uint32		opentype			= 3;
  optional uint32		actype				= 4;
  optional uint32		showBeginTime		= 5;
  optional uint32		showEndTime			= 6;
  optional uint32		beginTime			= 7;
  optional uint32		endTime				= 8;
  optional uint32		playerLev			= 9;
  optional string		name				= 10;
  optional string		desc				= 11;
  repeated TodayTime	todayTimes			= 12;
  repeated uint32		values				= 13;
  repeated SourceList	rewards				= 14;
  repeated uint32		rewardGot			= 15;
  optional uint32		value				= 16;
  repeated string		childDesc			= 17;
  repeated uint32		shareValues			= 18;
  repeated SourceList	values2				= 19;
  repeated string		shareTex			= 20;
  optional string       icon                = 21;
  optional uint32		activetime			= 22;
  optional uint32		countdown			= 23;
  repeated ClientMonthCard    card			= 24;
  optional uint32		sequence			= 25;
  repeated ClientItemLimit  globalItemLimit = 26;
  repeated ClientItemLimit  playerItemLimit = 27;
  repeated uint32       getTimes            = 28; //Ã¿Ïî¸÷¸öµÄ¿ÉÁìÈ¡´ÎÊý,ÒÑÁìÈ¡´ÎÊýµÄÖµÔÚrewardGot
  repeated uint32       everyValues         = 29; //Ã¿¸ö×ÓÏîµÄÖµ(´òÕÛÐèÒª*100, Ä¿±êÀà»î¶¯¸Ã²ÎÊýÔò´ú±íÐèÒªµÄÖµ) 
  repeated uint32       everyDoneValues     = 30; //Ã¿¸ö×ÓÏî´ïµ½µÄÖµ(Ä¿±êÀà»î¶¯¸Ã²ÎÊý´ú±íÒÑ´ïµ½µÄÖµ) 
  optional LString		name_l				= 31;
  optional LString		desc_l				= 32;
  repeated LString		childDesc_l	    	= 33;
  repeated uint32       intNumber           = 34; //ÕûÊý²ÎÊýÁÐ±í,²»Í¬»î¶¯²»Í¬ÓÃ·¨,´ó²¿·Ö»î¶¯²»ÓÃÕâ¸ö²ÎÊý
  repeated IntList      intNumberList       = 35; //  
  repeated uint32       mailid              = 36;
  repeated LString      child2Desc_l        = 37;
}
enum EActTargetTimesType
{
	EActTargetTimesType_None                = 0;
	EActTargetTimesType_EquipDiamondsHire   = 1; //×°±¸ÕÐÄ¼´ÎÊý£¨×êÊ¯ÕÐÄ¼£©
	EActTargetTimesType_HeroDiamondsHire    = 2; //Îä½«ÕÐÄ¼´ÎÊý£¨×êÊ¯ÕÐÄ¼£©
	EActTargetTimesType_ArenaAttacked       = 3; //¾º¼¼³¡Õ½¶·´ÎÊý
	EActTargetTimesType_ArenaWin            = 4; //¾º¼¼³¡»ñÊ¤´ÎÊý
	EActTargetTimesType_ArenaContinueWin    = 5; //¾º¼¼³¡Á¬Ê¤´ÎÊý
	EActTargetTimesType_RebelArmyAttacked   = 6; //½Ë·Ë´ÎÊý
	EActTargetTimesType_RobTreasureAttacked = 7; //¶á±¦´ÎÊý
	EActTargetTimesType_CrusadeAttacked     = 8; //ÑªÕ½Ê¤Àû´ÎÊý
	EActTargetTimesType_NormalMapWin        = 9; //Ö÷Ïß¸±±¾´ÎÊý
	EActTargetTimesType_CopyReset           = 10;//¸±±¾ÖØÖÃ´ÎÊý
	EActTargetTimesType_TreasureCombine     = 11;//±¦ÎïºÏ³É´ÎÊý
	EActTargetTimesType_ServerWarScoreAttack= 12;//»ý·ÖÕ½¹¥´ò´ÎÊý
	EActTargetTimesType_UpWings             = 13;//³á°òÇ¿»¯´ÎÊý
	EActTargetTimesType_GeneralShopRefresh  = 14; //Ãû½«ÉÌµêË¢ÐÂ´ÎÊý
	EActTargetTimesType_TeamRebel           = 15; //ÌÖ·¥´ÎÊý
	EActTargetTimesType_AstrologyHire       = 16; //Õ¼ÐÇ´ÎÊý
	EActTargetTimesType_RebelArmyKilled     = 17; //»÷É±½Ë·ËBOSS
	EActTargetTimesType_EliteCopyWin        = 18; //¾«Ó¢¸±±¾´ÎÊý
	EActTargetTimesType_TurnTable           = 19; //×ªÅÌ´ÎÊý
	EActTargetTimesType_GhostBox            = 20; //µã½«´ÎÊý
	EActTargetTimesType_EpicCopyWin         = 21; //Ê·Ê«¸±±¾´ÎÊý
	EActTargetTimesType_LegendCopyWin       = 22; //´«Ëµ¸±±¾´ÎÊý
	EActTargetTimesType_ChargeShopBuyItem   = 31; //³äÖµÉÌ³Ç¹ºÂòÎïÆ·´ÎÊý
	EActTargetTimesType_Max                 = 32; 
};


message HalfBuyElement
{
	required uint32 index = 1;
	required uint32 number = 2;
}

message HalfBuy 
{
	repeated HalfBuyElement halfBuyEle = 1;
}

message AchieveElement
{
    required uint32 id = 1;
    optional uint64 charid = 2;
    optional uint32 got = 3;
}

message Achieve
{
	repeated AchieveElement achieves = 1;
}

enum ERankType
{
	ERankType_None 			= 0;
	ERankType_PlayerLevel   = 1;    //Íæ¼ÒµÈ¼¶
	ERankType_AllHeroEffect = 2; 	//¸±±¾Õ½Á¦
	ERankType_FiveHeroEffect= 3; 	//×î¸ß5ÃûÎä½«Õ½Á¦Ö®ºÍ(²»×öÁË10-16)
	ERankType_Weapon        = 4; 	//ÎäÆ÷Õ½Á¦
	ERankType_Hero          = 5; 	//Îä½«Õ½Á¦
	ERankType_CopyStars     = 6;    //Ö÷Ïß¾çÇé+¾«Ó¢¹Ø¿¨ÆÀ¼ÛÐÇ¼¶ºÍ
	ERankType_NormalStars   = 7; 	//Ö÷Ïß¾çÇéÐÇ¼¶ºÍ
	ERankType_EliteStars    = 8; 	//¾«Ó¢¹Ø¿¨ÆÀ¼ÛÐÇ¼¶ºÍ
    ERankType_Arena         = 9;    //¾º¼¼³¡ÅÅÃû
	ERankType_Harm			= 10;	//ÉËº¦ÅÅÃû
	ERankType_Exploits		= 11;	//¹¦Ñ«ÅÅÃû
	ERankType_Guild         = 12;   //¾üÍÅ¾­Ñé
	ERankType_Crusade       = 14;   //ÑªÕ½
	ERankType_Recharge      = 15;   //×Ü³äÖµ
	ERankType_GuildWar      = 16;   //¾üÍÅÕ½
	ERankType_SecretHoleStar= 17;   //ÃØ¾³ÐÇÊý
	ERankType_CashConsume   = 18;   //½ð±ÒÏûºÄ
	ERankType_GoldConsume   = 19;   //×êÊ¯ÏûºÄ
	ERankType_GoldConsume2  = 20;   //×êÊ¯ÏûºÄ2
	ERankType_GuildMapHarm  = 21;   //¾üÍÅ¸±±¾ÉËº¦
	ERankType_Diagram 		= 22; 	//ÕóÍ¼Öµ
	ERankType_Max           = 23;
};
message ClientRank
{
  required ERankType type          = 1;
  required uint32    rank          = 2;
  required uint64    charid        = 3;
  required uint32    playerLev     = 4;
  required uint32    vipLev        = 5;
  required string    playerName    = 6;
  optional string    playerGuild   = 7;
  required uint64    value         = 8;
  optional uint32    templateId    = 9;
  optional uint64    instanceId    = 10;
  optional uint32    instanceValue = 11; //ÎäÆ÷¸ÃÖµÔò=¾«Á¶µÈ¼¶*1000+Ç¿»¯µÈ¼¶
  required uint32    effect        = 12;
  required uint32    photo         = 13;
}

message ClientRankList
{
  required ERankType  type         = 1;
  repeated ClientRank items        = 2;
  required uint32     myrank       = 3;
  optional uint32     templateId   = 4;
  optional uint32     myvalue      = 5;
}
message ClientHeroRank
{
	required uint32 rank           = 1;
	required uint32 hero_id        = 2;
	required uint64 charid         = 3;
	required string name           = 4;
	optional string guild          = 5;
	required uint32 photo          = 6;
	required uint32	playerlevel    = 7;
	required uint32	level		   = 8;
	required uint32	forceLevel	   = 9;	// Ç¿»¯µÈ¼¶
	required uint32 deificationlevel = 10;   //Éñ×ªµÈ¼¶
	required uint32 wingslevel     = 11;   //³á°òµÈ¼¶
	required uint32 effect         = 12;
}

message ClientAchieve
{
  required uint32     id         = 1;
  optional uint64     charid     = 2;
  optional uint32     photo      = 3;
  optional uint32     playerLev  = 4;
  optional uint32     vipLev     = 5;
  optional string     playerName = 6;
  optional uint32     got        = 7;
}

enum eActionType
{
	RebelArmy			= 1;
}

message ActionRecord
{
	required eActionType 	type = 1;
	required uint32         value = 2 [default = 0]; // Ö»±íÃ÷Ä³¸öÐÐÎª´ÎÊý
};
enum eGuildJob
{
	eGuildJob_None = 0;
	eGuildJob_Leader = 1;
	eGuildJob_Deputy = 2;
	eGuildJob_Elite = 3;
	eGuildJob_Member = 4;
	eGuildJob_Max = 5;
};

enum RaidTeamOpt
{
	RTO_ENTER = 0;
	RTO_CANCEL = 1;
	RTO_KICK_PERSON = 2;
	RTO_BATTLE_TIMER = 3;
	RTO_BATTLE_START = 4;
	RTO_AGREE = 5;
	RTO_REFUSE = 6;
};

enum RaidTeamNtf
{
	RTN_DATA = 0;
	RTN_ENTER = 1;
	RTN_TEAM_CANCEL = 2;
	RTN_PERSON_CANCEL = 3;
	RTN_KICK_PERSON = 4;
	RTN_BATTLE_TIMER = 5;
	RTN_BATTLE_START = 6;
	RTN_BATTLE_RESTART = 7;
	RTN_REQUEST	= 8;
	RTN_REFUSE = 9;
	RTN_REFUSED = 10;
};

enum RaidTeamStatus
{
	RTS_NONE = 0;
	RTS_READY = 1;
	RTS_BATTLEING = 2;
};
message GuildInfo
{
	required uint32     id         = 1;
	required uint32     level      = 2;
	required uint32     exp        = 3;
	required uint64     creater    = 4;
	required uint64     leader     = 5;
	required uint32     createtime = 6;
	required uint32     photo      = 7;
	required string     name       = 8;
	required string     notice     = 9;
	required string     manifesto  = 10;
	required uint32     ritual     = 11;
	required uint32     technology_level= 12;
	required uint32     technology_exp  = 13;
	repeated uint32     unlocked_skill = 14;
	optional string     guildwar_enemy =15; //¾üÍÅÕ½µÄ¶ÔÊÖ
	optional uint32     guildwar_enemy_exp = 16; //¾üÍÅÕ½¾üÍÅÇÀ¶áµÄÎï×Ê,×Ô¼º¾üÍÅÇÀ¶áµÄ,²»ÊÇµÐ·½ÇÀµÄ
	optional uint32     city_level = 17;
	optional uint32     city_exp   = 18;
};
message ClientGuildInfo
{
	required GuildInfo info        = 1;
	optional uint32    membernum   = 2;
    optional uint32    membermax   = 3;
	optional uint32    isapply     = 4; //0:Î´ÉêÇë 1:ÒÑÉêÇë
	optional string    leadername  = 5;
	optional uint32    myjob       = 6;

};
enum eGuildMemberType
{
	eGuildMemberType_None = 0;
	eGuildMemberType_New  = 1;
	eGuildMemberType_Update=2;
	eGuildMemberType_Quit = 3;
	eGuildMemberType_Apply= 4;
	eGuildMemberType_Max  = 5;
}
message ClientGuildMember
{
	required uint64  charid = 1;
	required string  name   = 2;
	required uint32  photo  = 3;
	required uint32  level  = 4;
	required uint32  vip    = 5;
	required uint32  effect = 6;
	optional uint32  online = 7;
	optional uint32  arenarank=8;
	optional uint32  job    = 9;
	optional uint32  devote =10;
	optional uint32  dailyDevote=11;
	optional eGuildMemberType type = 12;
};

message ClientGuildRitual
{
	required uint32 rate     = 1; //¼Àìë½ø¶È
	optional uint32 ritual   = 2; //½ñÌì¼Àìë±êÖ¾
	optional uint32 days     = 3; //ÒÑ¼ÀìëÌìÊý
	optional uint32 rewardgot= 4; //ÊÇ·ñÒÑÁìÈ¡7Ìì½±Àø
	optional uint32 ratereward= 5; //ÁìÈ¡¼Àìë½ø¶È½±ÀøµÄ±êÖ¾ µÚ1Î»±íÊ¾µÚÒ»¸ö±¦Ïä,ºóÃæÀàÍÆ
	optional uint32 guildlevel= 6;
	optional uint32 guildexp  = 7;
}
message ClientGuildTechnology
{
	required uint32 technology_level= 1;
	required uint32 technology_exp  = 2;
	repeated uint32 unlocked_skill  = 3;
}
enum eGuildStateType
{
	eGuildStateType_None     = 0;
	eGuildStateType_Ritual   = 1;
	eGuildStateType_NewMember= 2;
	eGuildStateType_JobChange= 3; //value=1ÉýÖ° 2:½µÖ°
	eGuildStateType_LeaderChange=4;
	eGuildStateType_Max = 5;
}
message ClientGuildState
{
	required uint32 job = 1;
	required string name = 2;
	required eGuildStateType type = 3; //¶¯Ì¬ÀàÐÍ 
	required uint32 value = 4; //ÀàÐÍµÄÖµ
	optional string name2 = 5; 
}
message ClientGuildWarMsg
{
	required bool is_attack            = 1; //0:±»¹¥´ò 1:¹¥´ò
	required bool is_attacker_win      = 2; //¹¥·½ÊäÓ®
	required string attacker_name      = 3; 
	required uint32 attacker_star      = 4;
	required string defender_name      = 5;
	required uint32 defender_star      = 6;
	required string enemy_guild_name   = 7;
	required uint32 exp                = 8; //ÇÀ¶á»ò±»ÇÀµÄ¾üÍÅÎï×Ê 
	optional uint32 attacker_total     = 9;
	optional uint32 attacker_win       = 10;
	optional uint32 total_exp          = 11;//¾üÍÅÇÀ¶áµÄ×ÜÎï×Ê,¸ù¾Ýis_attackÀ´ÅÐ¶ÏÊÇÎÒ·½»¹ÊÇ¶Ô·½

}
message ClientGuildWarEndMsg
{
	required bool is_attack            = 1; //0:±»¹¥´ò 1:¹¥´ò
	required string enemy_guild_name   = 2;
	required uint32 exp                = 3; //ÇÀ¶á»ò±»ÇÀµÄ¾üÍÅÎï×Ê 
	required uint32 attack_total     = 4;
	required uint32 attack_win       = 5;
}


message MonthCardEle
{
	required uint32 index = 1;
	required uint32 count = 2;
	required uint32 startTime = 3;
	required uint32 repeat = 4;
}

message DbMonthCard
{
	repeated MonthCardEle card = 1;
}

enum ePrizeGet  // 
{
	ePrizeGet_None              = 0;
	ePrizeGet_OnlineGift		= 1; // ÔÚÏßÀñ°ü value ÎªÊ±¼ä
	ePrizeGet_TaskScore         = 2; // ÈÎÎñ»ý·Ö½±Àø
	ePrizeGet_GuildMapReward    = 3; // ¾üÍÅ¸±±¾½±Àø
	ePrizeGet_GuildTechnologyReward = 4; // ¾üÍÅ¿Æ¼¼µÈ¼¶Àñ°ü
	ePrizeGet_FunctionReward    = 5; //¹¦ÄÜÒýµ¼Àñ°ü
	ePrizeGet_ArenaScore        = 6; //¾º¼¼³¡»ý·Ö
	ePrizeGet_GuildCopyPassReward = 7; //¾üÍÅ¸±±¾Í¨¹Ø½±Àø
	ePrizeGet_MonthSignIn       = 8; //ÔÂÀúÇ©µ½½±Àø
	ePrizeGet_Max               = 9;
};
message PrizeInfo
{
	required int32  type                = 1;
	required int32  got                 = 2;
	required int32  value               = 3;
	optional uint32 reset 				= 4; // 1: ÖØÖÃ 0:²»ÖØÖÃ
}
message PrizeInfoList
{
	repeated PrizeInfo item     =  1;
}

message GuildMapInfo
{
	required uint32 passed_chapterid = 1;
	required uint32 select_chapterid = 2;
	optional uint32 map_id           = 3;
	optional bool   is_map_pass      = 4;
	optional uint32 pass_time        = 5;
}
message GuildMapMonster
{
	required uint32 monster_id = 1;
	required uint32 hp_per     = 2; //Ê£ÓàÑªÁ¿
	optional uint32 hp_max     = 3; //ÑªÁ¿ÉÏÏÞ
}
message GuildMapItem
{
	optional ClientSource source = 1;
	optional uint64       charid  = 2;
	optional string       name    = 3;
	optional uint32       photo   = 4;
}
message GuildMapReward
{
	required uint32 map_id = 1;
	repeated GuildMapItem item = 2;
}
message DBGuildMap
{
	optional GuildMapInfo info       = 1;
	repeated GuildMapMonster monster = 2; 
	repeated GuildMapItem item       = 3; 
}
//2.1.0°æ±¾ºóÊ¹ÓÃGuildNewMapInfoºÍGuildChapterInfo
message GuildNewMapInfo
{
	required uint32 map_id = 1;
	optional uint32 pass_time = 2;
	repeated GuildMapMonster monster = 3;
	repeated GuildMapItem    item = 4;
	optional string pass_name = 5;
}
message GuildChapterMap
{
	required uint32 chapter_id = 1;
	repeated GuildNewMapInfo map_item = 2;
	repeated uint64 attack_player = 3;
	optional bool   self_attacked = 4;
}
message GuildChapterInfo
{
	required uint32 passed_chapterid = 1;
	optional bool  chapter_back      = 2;
	repeated GuildChapterMap chapter_item = 3;
	optional uint32 attack_chapterid = 4;
}

enum GuildTerritoryEventType
{
	GuildTerritoryEventType_None    = 0;
	GuildTerritoryEventType_Rioting = 1; //±©¶¯ÖÐ
	GuildTerritoryEventType_RiotDone= 2; //±©¶¯±»ÕòÑ¹
	GuildTerritoryEventType_NotHappen= 3; //Ã»ÓÐ·¢Éú
	GuildTerritoryEventType_Max     = 4;
}
message GuildTerritoryEvent
{
	required uint32 id = 1;
	required GuildTerritoryEventType type = 2;
	repeated ClientSource sources = 3;
	optional uint64 suppress_charid = 4;
	optional string suppress_name = 5;
	}
message GuildTerritoryEventUpdate
{
	required uint32 id = 1;
	required GuildTerritoryEventType type = 2;
	required uint32 index = 3;
}

message GuildTerritoryChapter
{
	required uint32 chapter_id = 1;
	required uint32 hero_id    = 2;
	required uint32 begin_time = 3;
	repeated GuildTerritoryEvent event = 4; 
	repeated ClientSource sources = 5;//Ñ²ÂßÍê±ÏµÄ½±Àø
	required uint32 source_rate = 6;   
}
message GuildTerritoryInfo
{
	required uint32 passed_chapterid 	 = 1;
	repeated GuildTerritoryChapter item  = 2;
}
message GuildMemberTerritoryInfo
{
	required uint64 charid    = 1;
	required uint32 photo     = 2;
	required uint32 level     = 3;
	required string name      = 4;
	required uint32 territoryCount = 5;
	required uint32 territoryRiotCount = 6;
}
enum PlayerTerritoryEventType
{
	PlayerTerritoryEventType_None    = 0;
	PlayerTerritoryEventType_Rioting = 1; //±©¶¯ÖÐ
	PlayerTerritoryEventType_RiotDone= 2; //±©¶¯±»ÕòÑ¹
	PlayerTerritoryEventType_Max     = 3;
}
message PlayerTerritoryEvent
{
	required uint32 id = 1;
	required PlayerTerritoryEventType type = 2;
	repeated ClientSource sources = 3;
	optional uint64 suppress_charid = 4;
	optional string suppress_name = 5;
	optional uint32 begin_time = 6;
	optional uint32 rate = 7;
	repeated ClientSource suppress_sources = 8;
	optional uint32 patrol_words = 9;
	optional uint32 suppress_words = 10;
	optional uint32 suppress_time = 11;
}
message PlayerTerritoryChapter
{
	required uint32 chapter_id = 1;
	required uint32 hero_id    = 2;
	required uint32 begin_time = 3;
	required uint32 end_time   = 4;
	required uint32 patrol_type = 5; //Ñ²ÂßÀàÐÍ 1:ÆÕÍ¨ 2:ÖÐ¼¶ 3:¸ß¼¶
	repeated PlayerTerritoryEvent event = 6; 
	repeated ClientSource sources = 7;//Ñ²ÂßÍê±ÏµÄ½±Àø
	required uint32 next_event_time = 8; //ÏÂ´ÎÊÕÒæÊ±¼ä
}
message TerritorySkill
{
	required uint32 id = 1;
	required uint32 level = 2;
}
message PlayerTerritoryInfo
{
	required uint32 passed_chapterid 	 = 1;
	repeated PlayerTerritoryChapter item  = 2;
	repeated TerritorySkill skill = 3;
}

message FriendTerritoryInfo
{
	required uint64 charid    = 1;
	required uint32 photo     = 2;
	required uint32 level     = 3;
	required string name      = 4;
	required uint32 territoryCount = 5;
	required uint32 territoryRiotCount = 6;
	optional uint32 patrolCount = 7;
	optional uint32 star      = 8;
	optional uint32 offlineTime = 9; //0:ÔÚÏß
}


enum eItemType
{
	eItemTypeNone              = 0;
	eItemTypeHeroChip			= 1; // Ó¢ÐÛËéÆ¬
	eItemTypeStrength         	= 2; // Ç¿»¯
	eItemTypeMaterial    		= 3; // ²ÄÁÏ
	eItemTypeScroll				= 4; // ¾íÖá
	eItemTypeConsume			= 5; // ÏûºÄ
	eItemTypeEquipChip			= 6; // ËéÆ¬
	eItemTypeMaterial2			= 7; // ²ÄÁÏ2
	eItemTypeRecruit			= 9; // ÕÐÄ¼
	eItemTypeFashion			= 10; // Ê±×°
	eItemTypeTreasure			= 11; // ±¦²Ø
	eItemType_Max               = 12;
};

enum eUseItem
{
	eUseItemRob				= 1; // ¶á±¦ÃâÕ½ÅÆ value 0:ÆÕÍ¨ 1:¸ß¼¶
}

enum EReason
{
	EReason_None                 = 0;
	EReason_Default              = 1;
	EReason_Add_GM               = 2;
	EReason_Add_NewPlayer        = 3;
	EReason_Add_SaleItem         = 4;
	EReason_Add_OpenBoxCopper    = 5;
	EReason_Add_OpenBoxDiamons   = 6;
	EReason_Add_Expedition       = 7;
	EReason_Add_Map              = 8;
	EReason_Add_ComposeItem      = 9;
	EReason_Add_UsedItem         = 10;
	EReason_Add_ShopBuy          = 11;
	EReason_Add_FriendEnergy     = 12;
	EReason_Add_Activity         = 13;
	EReason_Add_Resolve          = 14;
	EReason_Add_Task             = 15;
	EReason_Add_ChapterBox       = 16;
	EReason_Add_Mail             = 17;
	EReason_Add_Arena            = 18;
	EReason_Add_SignIn           = 19;
	EReason_Add_SaleEquip        = 20;
	EReason_Add_RechargeShop     = 21;
	EReason_Add_RebelArmy        = 22;
	EReason_Add_Achieve          = 23;
	EReason_Add_Guild            = 24;
	EReason_Add_GuildRitual      = 25;
	EReason_Add_RaidTeam		 = 26;
	EReason_Add_MonthCard		 = 27;
	EReason_Add_OnlineGift       = 28;
	EReason_Add_TaskScore        = 29;
	EReason_Add_RmbRecharge      = 30;
	EReason_Add_Notice           = 31;
	EReason_Add_Evolution        = 32;
	EReason_Add_HeroForce        = 33;
	EReason_Add_Rob      		 = 34;
	EReason_Add_SevenDay         = 35;
	EReason_Add_HalfBuy          = 36;
	EReason_Add_Shop1            = 41;
	EReason_Add_Shop2            = 42;
	EReason_Add_Shop3            = 43;
	EReason_Add_Shop4            = 44;
	EReason_Add_Shop5            = 45;
	EReason_Add_Shop6            = 46;
	EReason_Add_Shop7            = 47;
	EReason_Add_Shop8            = 48;
	EReason_Add_Shop9            = 49;
	EReason_Add_Shop10           = 50;
	EReason_Add_Shop11           = 51;
	EReason_Add_Shop12           = 52;
	EReason_Add_Shop13           = 53;
	EReason_Add_Shop14           = 54;
	EReason_Add_Shop15           = 55;
	EReason_Add_Shop16           = 56;
	EReason_Add_Shop17           = 57;
	EReason_Add_Shop18           = 58;
	EReason_Add_Shop19           = 59;
	EReason_Add_Shop20           = 60;
	EReason_Add_GuildTerritory   = 61;
	EReason_Add_UpPosition       = 62;
	EReason_Add_Opt				 = 63;
	EReason_Add_GuildWar         = 64;
	EReason_Add_GuildTechnolog   = 65;
	EReason_Add_NormalMap        = 71;
	EReason_Add_EliteMap         = 72;
	EReason_Add_SourceMap        = 73;
	EReason_Add_EpicMap          = 74;
	EReason_Add_GodMap           = 75;
	EReason_Add_LegendMap        = 76;
	EReason_Add_LegendChapterBox = 80;
	EReason_Add_NormalChapterBox = 81;
	EReason_Add_EliteChapterBox  = 82;
	EReason_Add_EpicChapterBox   = 84;
	EReason_Add_ServerWar        = 85;
	EReason_Add_TurnTable        = 86;
	EReason_Add_ServerTeam       = 87;
	EReason_Add_HeroAwake        = 88;
	EReason_Add_Tomb             = 89;
	EReason_Add_FuncReward       = 90;
	EReason_Add_SecretHole       = 91;
	EReason_Add_SevenBuy		 = 92;
	EReason_Add_ArenaScore       = 93;
	EReason_Add_ReturnSystem     = 94;
	EReason_Add_BuyPriceTimes    = 95;
	EReason_Add_OpenBoxAstrology = 96;
	EReason_Add_SaleHero         = 97;
	EReason_Add_AstrologyLucky   = 98;
	EReason_Add_PlayerTerritory  = 99;
	EReason_Add_BatchResolve 	 = 100;

	//100-199²»ÄÜÓÃ.ÓÃ×÷Âò»õ±ÒÈÕÖ¾ÁË
	EReason_Add_ActivityBegin    = 200;
	EReason_Add_Activity1        = 201;
	EReason_Add_Activity2        = 202;
	EReason_Add_Activity3        = 203;
	EReason_Add_Activity4        = 204;
	EReason_Add_Activity5        = 205;
	EReason_Add_Activity6        = 206;
	EReason_Add_Activity7        = 207;
	EReason_Add_Activity8        = 208;
	EReason_Add_Activity9        = 209;
	EReason_Add_Activity10       = 210;
	EReason_Add_Activity11       = 211;
	EReason_Add_Activity12       = 212;
	EReason_Add_Activity13       = 213;
	EReason_Add_Activity14       = 214;
	EReason_Add_Activity15       = 215;
	EReason_Add_Activity16       = 216;
	EReason_Add_Activity17       = 217;
	EReason_Add_Activity18       = 218;
	EReason_Add_Activity19       = 219;
	EReason_Add_Activity20       = 220;
	EReason_Add_Activity21       = 221;
	EReason_Add_Activity22       = 222;
	EReason_Add_Activity23       = 223;
	EReason_Add_Activity24       = 224;
	EReason_Add_Activity25       = 225;
	EReason_Add_Activity26       = 226;
	EReason_Add_Activity27       = 227;
	EReason_Add_Activity28       = 228;
	EReason_Add_Activity29       = 229;
	EReason_Add_Activity30       = 230;
	EReason_Add_Activity31       = 231;
	EReason_Add_Activity32       = 232;
	EReason_Add_Activity33       = 233;
	EReason_Add_Activity34       = 234;
	EReason_Add_Activity35       = 235;
	EReason_Add_Activity36       = 236;
	EReason_Add_Activity37       = 237;
	EReason_Add_Activity38       = 238;
	EReason_Add_Activity39       = 239;
	EReason_Add_Activity40       = 240;
	EReason_Add_Activity41       = 241;
	EReason_Add_Activity42       = 242;
	EReason_Add_Activity43       = 243;
	EReason_Add_Activity44       = 244;
	EReason_Add_Activity45       = 245;
	EReason_Add_Activity46       = 246;
	EReason_Add_Activity47       = 247;
	EReason_Add_Activity48       = 248;
	EReason_Add_ActivityEnd      = 299;
	EReason_Add_SecretHoleElite  = 300;
	EReason_Add_SynWakeEquip 	 = 301;	
	EReason_Add_UpgradeDiagram 	 = 302;
	EReason_Add_AttackExercise 	 = 303;
	EReason_Add_OpenBoxGhost     = 304;
	EReason_Add_AttackEpicBoss 	 = 305;
	EReason_Add_GuildCity        = 306;
	EReason_Add_Sevengifts 		 = 308;
	EReason_Add_OnlineReward 	 = 309;
	EReason_Add_AccCoin 		 = 310;
	EReason_Add_MonthSignIn      = 311;
	EReason_Add_Retrieve 	 	 = 313;
	EReason_Add_RetrieveAll 	 = 314;
	EReason_Add_Shop21           = 361;
	EReason_Add_Shop22           = 362;
	EReason_Add_Shop23           = 363;
	EReason_Add_Shop24           = 364;
	EReason_Add_Shop25           = 365;
	EReason_Add_Shop26           = 366;
	EReason_Add_Shop27           = 367;
	EReason_Add_Shop28           = 368;
	EReason_Add_Shop29           = 369;
	EReason_Add_Shop30           = 370;
	EReason_Add_Shop31           = 371;
	EReason_Add_Shop32           = 372;
	EReason_Add_Shop33           = 373;
	EReason_Add_Shop34           = 374;
	EReason_Add_Shop35           = 375;
	EReason_Add_Shop36           = 376;
	EReason_Add_Shop37           = 377;
	EReason_Add_Shop38           = 378;
	EReason_Add_Shop39           = 379;
	EReason_Add_Shop40           = 380;
	EReason_Add_ShopMax          = 399;
	EReason_Add_Robot 	         = 400;
	EReason_Add_Max              = 999;
	EReason_Reduce_None          = 1000;
	EReason_Reduce_ForceNature   = 1001;
	EReason_Reduce_OpenBoxCopper = 1002;
	EReason_Reduce_OpenBoxDiamons= 1003;
	EReason_Reduce_ChangeName    = 1004;
	EReason_Reduce_ChangePhoto   = 1005;
	EReason_Reduce_BuySkillPoint = 1006;
	EReason_Reduce_SaleItem      = 1007;
	EReason_Reduce_Map           = 1008;
	EReason_Reduce_ComposeItem   = 1009;
	EReason_Reduce_UsedItem      = 1010;
	EReason_Reduce_ResetMapTimes = 1011;
	EReason_Reduce_HeroEvolution = 1012;
	EReason_Reduce_HeroExp       = 1013;
	EReason_Reduce_HeroForce     = 1014;
	EReason_Reduce_HeroNatrue    = 1015;
	EReason_Reduce_EquipForce    = 1016;
	EReason_Reduce_EquipRefine   = 1017;
	EReason_Reduce_ShopBuy       = 1018;
	EReason_Reduce_ShopRefresh   = 1019;
	EReason_Reduce_Arena         = 1020;
	EReason_Reduce_Activity      = 1021;
	EReason_Reduce_Resolve       = 1022;
	EReason_Reduce_RechargeShop  = 1023;
	EReason_Reduce_RebelArmy     = 1024;
	EReason_Reduce_Guild         = 1025;
	EReason_Reduce_GuildRitual   = 1026;
	EReason_Reduce_BuyMapTimes   = 1027;
	EReason_Reduce_Rob			 = 1028;
	EReason_Reduce_BuyPriceTimes = 1029;
	EReason_Reduce_UpPosition    = 1030;
	EReason_Reduce_RaidTeam      = 1031;
	EReason_Reduce_HalfBuy       = 1032;
	EReason_Reduce_GuildSkill    = 1033;
	EReason_Reduce_CrusadeReset  = 1034;
	EReason_Reduce_HandBook  	 = 1035;
	EReason_Reduce_HeroDeification = 1036;
	EReason_Reduce_Shop1         = 1041;
	EReason_Reduce_Shop2         = 1042;
	EReason_Reduce_Shop3         = 1043;
	EReason_Reduce_Shop4         = 1044;
	EReason_Reduce_Shop5         = 1045;
	EReason_Reduce_Shop6         = 1046;
	EReason_Reduce_Shop7         = 1047;
	EReason_Reduce_Shop8         = 1048;
	EReason_Reduce_Shop9         = 1049;
	EReason_Reduce_Shop10        = 1050;
	EReason_Reduce_Shop11        = 1051;
	EReason_Reduce_Shop12        = 1052;
	EReason_Reduce_Shop13        = 1053;
	EReason_Reduce_Shop14        = 1054;
	EReason_Reduce_Shop15        = 1055;
	EReason_Reduce_Shop16        = 1056;
	EReason_Reduce_Shop17        = 1057;
	EReason_Reduce_Shop18        = 1058;
	EReason_Reduce_Shop19        = 1059;
	EReason_Reduce_Shop20        = 1060;
	EReason_Reduce_ServerWar     = 1061;
	EReason_Reduce_TurnTable     = 1062;
	EReason_Reduce_SecretHole    = 1063;
	EReason_Reduce_GM     		 = 1070;
	EReason_Reduce_Tomb          = 1071;
	EReason_Reduce_HeroUpWings   = 1072;
	EReason_Reduce_EquipEvolve   = 1073;
	EReason_Reduce_EquipAwake    = 1074;
	EReason_Reduce_SevenBuy		 = 1075;
	EReason_Reduce_OpenBoxAstrology= 1076;
	EReason_Reduce_SaleHero      = 1077;
	EReason_Reduce_AddHeroExp    = 1078;
	EReason_Reduce_TreasureStreng=1079;
	EReason_Reduce_TreasureRefine=1080;
	EReason_Reduce_PlayerTerritory=1081;
	EReason_Reduce_BatchResolve  = 1082;
	EReason_Reduce_MonthSignIn   = 1083;
	EReason_Reduce_ActivityBegin = 1200;
	EReason_Reduce_Activity1     = 1201;
	EReason_Reduce_Activity2     = 1202;
	EReason_Reduce_Activity3     = 1203;
	EReason_Reduce_Activity4     = 1204;
	EReason_Reduce_Activity5     = 1205;
	EReason_Reduce_Activity6     = 1206;
	EReason_Reduce_Activity7     = 1207;
	EReason_Reduce_Activity8     = 1208;
	EReason_Reduce_Activity9     = 1209;
	EReason_Reduce_Activity10    = 1210;
	EReason_Reduce_Activity11    = 1211;
	EReason_Reduce_Activity12    = 1212;
	EReason_Reduce_Activity13    = 1213;
	EReason_Reduce_Activity14    = 1214;
	EReason_Reduce_Activity15    = 1215;
	EReason_Reduce_Activity16    = 1216;
	EReason_Reduce_Activity17    = 1217;
	EReason_Reduce_Activity18    = 1218;
	EReason_Reduce_Activity19    = 1219;
	EReason_Reduce_Activity20    = 1220; 
	EReason_Reduce_Activity21    = 1221; 
	EReason_Reduce_Activity22    = 1222; 
	EReason_Reduce_Activity23    = 1223; 
	EReason_Reduce_Activity24    = 1224; 
	EReason_Reduce_Activity25    = 1225; 
	EReason_Reduce_Activity26    = 1226; 
	EReason_Reduce_Activity27    = 1227; 
	EReason_Reduce_Activity28    = 1228; 
	EReason_Reduce_Activity29    = 1229; 
	EReason_Reduce_Activity30    = 1230; 
	EReason_Reduce_Activity31    = 1231; 
	EReason_Reduce_Activity32    = 1232; 
	EReason_Reduce_Activity33    = 1233; 
	EReason_Reduce_Activity34    = 1234; 
	EReason_Reduce_Activity35    = 1235; 
	EReason_Reduce_Activity36    = 1236; 
	EReason_Reduce_Activity37    = 1237; 
	EReason_Reduce_Activity38    = 1238; 
	EReason_Reduce_Activity39    = 1239; 
	EReason_Reduce_Activity40    = 1240; 
	EReason_Reduce_Activity41    = 1241; 
	EReason_Reduce_Activity42    = 1242; 
	EReason_Reduce_Activity43    = 1243; 
	EReason_Reduce_Activity44    = 1244; 
	EReason_Reduce_Activity45    = 1245; 
	EReason_Reduce_Activity46    = 1246; 
	EReason_Reduce_Activity47    = 1247; 
	EReason_Reduce_Activity48    = 1248; 
	EReason_Reduce_Activity49    = 1249; 
	EReason_Reduce_ActivityEnd   = 1299;
	EReason_Reduce_UpgradeWakeLevel 	 = 1300;
	EReason_Reduce_SynWakeEquip  = 1301;
	EReason_Reduce_UpgradeDiagram = 1302;
	EReason_Reduce_OpenBoxGhost  = 1303;
	EReason_Reduce_WearWakeEquip = 1304;
	EReason_Reduce_RefreshExerciseBoss = 1305;
	EReason_Reduce_AttackEpicBoss= 1306;
	EReason_Reduce_GuildCity     = 1307;        
	EReason_Reduce_Retrieve 	 = 1309;
	EReason_Reduce_RetrieveAll 	 = 1340;
	EReason_Reduce_ChatPasswd 	 = 1341;
	EReason_Reduce_Shop21        = 1361;
	EReason_Reduce_Shop22        = 1362;
	EReason_Reduce_Shop23        = 1363;
	EReason_Reduce_Shop24        = 1364;
	EReason_Reduce_Shop25        = 1365;
	EReason_Reduce_Shop26        = 1366;
	EReason_Reduce_Shop27        = 1367;
	EReason_Reduce_Shop28        = 1368;
	EReason_Reduce_Shop29        = 1369;
	EReason_Reduce_Shop30        = 1370;
	EReason_Reduce_Shop31        = 1371;
	EReason_Reduce_Shop32        = 1372;
	EReason_Reduce_Shop33        = 1373;
	EReason_Reduce_Shop34        = 1374;
	EReason_Reduce_Shop35        = 1375;
	EReason_Reduce_Shop36        = 1376;
	EReason_Reduce_Shop37        = 1377;
	EReason_Reduce_Shop38        = 1378;
	EReason_Reduce_Shop39        = 1379;
	EReason_Reduce_Shop40        = 1380;
	EReason_Reduce_ShopMax       = 1399;
	EReason_Max                  = 1999;
};

enum eNoticeType
{
	eNoticeType_None        	= 0;
	eNoticeType_EquipQuality    = 1; //×°±¸Æ·ÖÊ
	eNoticeType_TreasureQuality = 2; //±¦ÎïÆ·ÖÊ
	eNoticeType_HeroStar        = 3; //Ó¢ÐÛÆ·ÖÊ
	eNoticeType_HeroForce       = 4; //Éñ×ª
	eNoticeType_HeroEvolution   = 5; //ÉýÐÇ
	eNoticeType_RebelArmyBoss   = 6; //ÅÑ¾üboss
	eNoticeType_Recharge        = 7; //³äÖµ
	eNoticeType_UseItem         = 8; //Ê¹ÓÃÎïÆ·
	eNoticeType_CreateGuild     = 9; //´´½¨¾üÍÅ
	eNoticeType_Custom     		= 10; //×Ô¶¨Òå¹«¸æ
	eNoticeType_OpenBox         = 11; //¿ª±¦Ïä
	eNoticeType_Max             = 12; 
};

message ClientNoticeInfo
{
	required uint32 id          = 1;
	required uint32 confid      = 2;
	required eNoticeType type   = 3;
	required uint32 templateid  = 4;
	optional uint32 value       = 5;
	optional string playername  = 6;
	optional uint32 playerstar  = 7;
	required bool   hasitem     = 8;
	required uint32 wordsid     = 9;
	optional uint32 reason      = 10;
	optional uint32 charid      = 11;
	repeated string str         = 12;
	required SourceType sourcetype = 13;
};

message DbTreasureInfo
{
	required uint32 charid      = 1;
	required uint32 level       = 2;
	required string playername  = 3;
	repeated uint32 itemlist    = 4;
};

enum eGameModuleType
{
	eGameModuleType_None        = 0;
	eGameModuleType_NomalMap    = 1;  //Ö÷Ïß¸±±¾
	eGameModuleType_EliteMap    = 2;  //¾«Ó¢¸±±¾
	eGameModuleType_SourceMap   = 3;  //Ãû½«¸±±¾
	eGameModuleType_Arena       = 4;  //¾º¼¼³¡
	eGameModuleType_Expedition  = 5;  //ÑªÕ½
	eGameModuleType_RebelArmy   = 6;  //½Ë·Ë
	eGameModuleType_Treasure    = 7;  //¶á±¦
	eGameModuleType_GuildWar    = 8;  //¾üÍÅÕ½
	eGameModuleType_EpicMap     = 14; //Ê·Ê«¸±±¾
	eGameModuleType_GodMap      = 15; //Éñ½«¸±±¾
	eGameModuleType_SecretHole  = 16; //ÃØ¾³
	eGameModuleType_ServerTeam  = 17; //¿ç·þ×é¶ÓÕ½
	eGameModuleType_LegendMap   = 18; //´«Ëµ¸±±¾
	eGameModuleType_Max         = 19;
}

enum eDropType
{
	eDropType_None = 0;
	eDropType_Drop = 1; // ¶á±¦
	eDropType_Common = 2; // Í¨ÓÃµôÂä Ä¿Ç°ÓÃÓÚ ¿ª±¦Ïä
}

message DbDropEle
{
	required uint32 type      = 1;
	required uint32 key       = 2;
	required uint32 val  	  = 3;
}

message DbDrop
{
	repeated DbDropEle one = 1;
};
message RobotEffect 
{
	required uint32 id      = 1;
	required uint32 effect  = 2;
}
message ClientChargeShopConf
{
	required uint32 goodsid      = 1;
	required uint32 shopType  	 = 2;
	repeated ClientSource buy	 = 3;
	required ClientSource cost	 = 4;
	required uint32	status		 = 5;
	required uint32 platformtype = 6;
	required bytes limitNumber	 = 7;
	required uint32 limitType	 = 8;
	required uint32 prizeFloat	 = 9;
	required uint32 isDouble	 = 10;
	required bytes IOSGoodId	 = 11;
	required bytes AndroidGoodId = 12;
	required bytes currency		 = 13;
	required uint32 goodGift	 = 14;
	required bytes itemIcon		 = 15;
	required bytes collectionIcon = 16;
	required bytes strName		 = 17;
	required bytes strDescription = 18;
	required uint32 startTime	  = 19;
	required uint32	endTime		  = 20;
	optional uint32 monthCardType = 21;
}
message ClientSevenDayRankEle 
{
	required uint32 rank      = 1;
	required uint64 charid    = 2;
	required string name  	  = 3;
	required uint32 value     = 4;
	required uint32 photo     = 5;
	required uint32 level     = 6;
}
message ClientSevenDayRank 
{
	required uint32 day       = 1;
	required uint32 seconds   = 2; //½áËãµÄÊ±¼ä,0ÎªÒÑ½áÊø
	repeated ClientSevenDayRankEle item = 3;
}
message DbNoticeEle
{
	required uint32 id          = 1;
	required eNoticeType type   = 2;
	required uint32	values		= 3;
	required uint32 wordsid  	= 4;
	required uint32 pro  		= 5;
	repeated ClientSource reward = 6;
	required uint32	number		= 7;
	required uint32 timeout		= 8;
	required uint32 reason		= 9;
	required uint32 rate		= 10;
	required uint32 sendNumber	= 11;
	required uint32 createTime	= 12;
	required string content		= 13;
}
message OptGlobal
{
	repeated DbNoticeEle notice = 1;
}
message ClientContinueCharge
{
	required uint32 index	= 1; 
	required uint32 cd		= 2;
	required string name	= 3;
	repeated uint32 line	= 4;
	repeated uint32 skillIndex = 5;
	required uint32	chargeType = 6;
	repeated uint32 chargeValue	= 7;
	repeated SourceList chargePrize	= 8;
	repeated SourceList chargePrize2 = 9;
	repeated SourceList chargePrize3 = 10;
	repeated SourceList chargePrize4 = 11;
}

message DbHandBookEle
{
	required uint32 key       = 1;
	required uint32 val  	  = 2;
}
message DbHandBook
{
	repeated DbHandBookEle one = 1;
};

message ClientHandBook
{
	required uint32 key       = 1;
	required uint32 val  	  = 2;
}
message PlayerTurntableData
{
	optional uint32 server_id                   = 1;
	optional string server_name                 = 2;
	required uint64 charid					    = 3;
	required uint32 photo                       = 4;
	required string name                        = 5;
	required uint32 actid                       = 6;
	required uint32 turnnum                     = 7;
	optional uint32 mailtime                    = 8;
	required uint64 uid 						= 9;
}
message GlobalGoodsConf
{
	required uint32 goodsid = 1;
	required uint32 num     = 2;
}
message ServerWarConf
{
	optional uint32 score_open_day  = 1;
	optional uint32 score_open_hour = 2;
	optional uint32 score_close_day = 3;
	optional uint32 score_close_hour= 4;
	optional uint32 fight_open_day  = 5;
	optional uint32 fight_open_hour = 6;
	optional uint32 fight_close_day = 7;
	optional uint32 fight_close_hour= 8;
	optional uint32 country_fight_num = 9;
	optional uint32 fight_show_topnum=10;
	optional uint32 fight_enemy_num = 11;
	optional uint32 score_rank_country_num = 12;
	optional uint32 fight_rank_num  = 13;
	optional uint32 score_win_score = 14;
	optional uint32 score_win_scoremin = 15;
	optional uint32 score_win_scoremax = 16;
	optional uint32 score_win_honor = 17;
	optional uint32 score_win_honormin = 18;
	optional uint32 score_win_honormax = 19;
	optional uint32 score_lose_score = 20;
	optional uint32 score_lose_honor = 21;
	optional float  effect_check_per = 22;
	optional uint32 effect_skip_per = 23;
	optional uint32 fight_win_honor = 24;
	optional uint32 fight_lose_honor= 25;
	repeated uint32 score_enemy_effect = 26;
	optional uint32 score_open_players = 27;
}
message STeamWinProperty
{
	required uint32 times = 1;
	optional uint32 atkHurt = 2; //ÔöÉË
	optional uint32 defHurt = 3; //¼õÉË
}
message ServerTeamConf
{
	optional TodayTime TeamOpenTime          = 1;
	repeated TodayTime TeamHonorDoubleTime   = 2;
	repeated uint32 TeamScoreAddPer          = 3;
	repeated uint32 TeamScore                = 4;
	repeated uint32 TeamHonor                = 5;
	repeated uint32 TeamFightEffectPer       = 6;
	repeated uint32 TeamFightAttr            = 7;
	repeated uint32 TeamFightFactor          = 8;
	repeated uint32 TeamRobotEffectPer       = 9;
	repeated STeamWinProperty property       = 10;
}
enum EServerWarStatus 
{
	EServerWarStatus_None      = 0;
	EServerWarStatus_ScoreReg  = 1; //»ý·Ö±¨ÃûÖÐ
	EServerWarStatus_Scoreing  = 2; //»ý·ÖÕ½½øÐÐÖÐ
	EServerWarStatus_ScoreEnd  = 3; //»ý·ÖÕ½½áÊø
	EServerWarStatus_Fighting  = 4; //Õù°ÔÈü½øÐÐÖÐ
	EServerWarStatus_FightEnd  = 5; //Õù°ÔÈü½áÊø 
	EServerWarStatus_Max       = 6;
}
enum ECountryType
{
	ECountryType_None              = 0;
	ECountryType_Wei               = 1;
	ECountryType_Shu               = 2;
	ECountryType_Wu                = 3;
	ECountryType_Qun               = 4;
	ECountryType_Max               = 5;
}

message ClientServerWarPlayer
{
	required ClientBattlePlayer battle_player   = 1;
	optional uint32             country         = 2;	 
	optional uint32             rank            = 3;
	optional uint32             score           = 4;
	optional bool               win             = 5;
}

enum ETombEventType
{
	ETombEventType_None   = 0;
	ETombEventType_Source = 1;
	ETombEventType_Player = 2;
	ETombEventType_Jiguan = 3;
	ETombEventType_Max    = 4;
}
message TombImp
{
	required uint32 id    = 1;
	optional uint32 event = 2;
	optional ClientBattlePlayer    opponent = 3;
	optional uint32 step  = 4;
	optional uint32 rate  = 5;
}

enum EServerTeamOpType
{
	EServerTeamOpType_None     = 0;
	EServerTeamOpType_Create   = 1;
	EServerTeamOpType_Join     = 2;
	EServerTeamOpType_Quit     = 3;
	EServerTeamOpType_InviteAll= 4;
	EServerTeamOpType_DoReady  = 5;
	EServerTeamOpType_BeginFight=6;
	EServerTeamOpType_Kick     = 7;
	EServerTeamOpType_Online   = 8;
	EServerTeamOpType_Max      = 9;
}
message ServerTeamBattle
{
	required uint32 hp         = 1;
	required uint32 atk        = 2;
	required uint32 forceLevel = 3;
	required uint32 refineLevel= 4;
	required uint32 nature     = 5;
	required uint32 equipStar  = 6;
}
message ClientServerTeamPlayer
{
	required ClientBattlePlayer battle_player   = 1;
	optional bool               isleader        = 2;
	optional uint32             pos             = 3;
	optional bool               isready         = 4;
	optional bool               isrobot         = 5;
	optional ServerTeamBattle   battle_attr     = 6;
	optional uint32             honor 		    = 7;
	optional uint32             honor_rank      = 8;
}
message ServerTeamPos
{
	required uint32             pos             = 1;
	required uint64             charid          = 2;
}
message ClientServerTeamFightTurn
{
	required uint32 pos1    = 1;
	required uint32 pos2    = 2;
	required uint32 hp1     = 3;
	required uint32 hp2     = 4;
	optional bool   dead1   = 5;
	optional bool   dead2   = 6;
}
message ClientServerTeamBattleResult
{
	repeated ClientServerTeamPlayer item1       = 1;
	repeated ClientServerTeamPlayer item2       = 2;
	required uint32                 winteam     = 3; //0:Æ½ÊÖ 1:item1·½Ó® 2:item2·½Ó®
	repeated uint64                 mvp         = 4;
	repeated ClientServerTeamFightTurn turn     = 5;
	required uint32                 myteam      = 6;
}

enum ELanguage
{
	ELanguage_None    = 0;
	ELanguage_zh_cn   = 1;
	ELanguage_zh_tw   = 2;
	ELanguage_en_us   = 3;
	ELanguage_th_th   = 4;
	ELanguage_vi_vn   = 5;
	ELanguage_ja_jp   = 6;
	ELanguage_ko_kr   = 7;
	ELanguage_zh_hk   = 8; 
	ELanguage_max     = 9;
}

message SecretHole
{
	required uint32 id     = 1;
	repeated uint32 star   = 2; 
	optional uint32 totalstar = 3;
}
message DBSecretHole
{
	required uint32       id = 1;                 
	required uint32    floor = 2;                  
	required uint32    boxtimes = 3;
	repeated uint32    buff  = 4;               
	repeated SecretHole hole = 5;
	required uint32    goodsid = 6;
	required uint32    stars = 7;
	optional uint32    floor_stars = 8;
}
//¶á±¦È¡µÃÐÒÔË°ñ·µ»Ø
message AuctionInfo
{
	required uint32 			   photo        = 1;
	required string 			   name         = 2;
	required uint32 			   num 			= 3;
	required ClientSource 		   source   	= 4;
	required uint32 			   serverid 	= 5;
	required string 			   servername  	= 6;
}

message AuctionConfig
{
	required uint32 id = 1;
	required uint32 sourceType = 2;
	required uint32 sourceId = 3;
	required uint32 sourceNum = 4;
	required uint32 maxNum = 5;
	required uint32 limit = 6;
 	required uint32 buyNum = 7;
}
message AuctionRecords
{
	required uint32 id = 1;
	required uint32 sourceType = 2;
	required uint32 sourceId = 3;
	required uint32 sourceNum = 4;
	required uint32 charid = 5;
	required uint32 photo = 6;
	required string name = 7;
	required uint32 serverid = 8;
	required string servername = 9;
	required uint32 num = 10; 
}
message AuctionRoleInfo
{
	required uint32 charid = 1;
	required uint32 serverid = 2;
	required uint32 photo = 3;
	required string name = 4;
	required uint32 num = 5;
}
message AuctionRoleMap
{
	required uint32 index = 1;
	repeated AuctionRoleInfo info = 2;
}
//Ò»ÔªÃëÉ±»î¶¯ÐòÁÐ»¯Êý¾Ý
message AuctionSerialize
{
	required uint32 status = 1;
	required uint32 activityid = 2;
	required uint32 endTime = 3;
	repeated AuctionConfig conf = 4;
	repeated AuctionRecords cur = 5;
	repeated AuctionRecords last = 6;
	repeated AuctionRoleMap inf = 7;	
}

enum EReturnType
{
	EReturnType_None = 0;
	EReturnType_Shop = 1;
	EReturnType_Exp  = 2;
	EReturnType_Welfare = 3;
	EReturnType_Privilege = 4;
	EReturnType_Charge = 5;
	EReturnType_Max  = 6;
}
enum EReturnPrivilegeType
{
	EReturnPrivilegeType_None = 0;
	EReturnPrivilegeType_Shop = 1;
	EReturnPrivilegeType_SourceMap = 2;
	EReturnPrivilegeType_ItemBuy = 3;
	EReturnPrivilegeType_Max  = 10;
}

message ReturnTask
{
	required uint32 id   = 1;
	required uint32 status = 2;
	required uint32 step = 3;
}
message DBReturnTask
{
	repeated ReturnTask task = 1;
}
message RefineEquipImp
{
    required uint32  type = 1;
    required uint64  id   = 2;
    required uint32  num  = 3;
}
enum EServerRankType //¿ç·þÅÅÐÐÃ¶¾Ù
{
	EServerRankType_None       = 0;
	EServerRankType_Diagram    = 1;
	EServerRankType_Max        = 2;
}
message PlayerRankData
{
	optional uint32 server_id                   = 1;
	required uint32 type                        = 2;
	required uint64 charid					    = 3;
	optional string server_name                 = 4;
	required uint64 rank_value                  = 5;
	optional uint64 value1                      = 6;
	optional uint64 value2                      = 7;
	optional uint32 rank                        = 8;
	optional ClientBattlePlayer battle_player   = 9;
}
enum EModuleOldFlag
{
	EModuleOldFlag_None           = 0;
	EModuleOldFlag_Progess        = 1; //ÐÂÊÖÒýµ¼
	EModuleOldFlag_MainHeroUp     = 2; //Ö÷½ÇÉý¼¶
	EModuleOldFlag_CopperHire     = 3; //³é×°±¸
	EModuleOldFlag_DiamondsHire   = 4; //Îä½«ÕÐÄ¼10 or 12
	EModuleOldFlag_ArenaDiamonds  = 5; //¾º¼¼³¡ÅÅÃû×êÊ¯
	EModuleOldFlag_EquipUp        = 6; //×°±¸±¦ÎïÇ¿»¯¾«Á¶
	EModuleOldFlag_BattleEffect   = 7; //Õ½¶·Á¦¼ÆËã
	EModuleOldFlag_Wings          = 8; //³á°ò
	EModuleOldFlag_MapBoss        = 9; //Ê·Ê«or´«Ææboss 0:Ê·Ê« 1:´«Ææ
	EModuleOldFlag_SevenDayRank5  = 10;//¿ª·þµÚ5ÌìÅÅÐÐ°ñ±ÈÆ´ 0:ÃØ¾³ 1:ÑªÕ½
	EModuleOldFlag_ClientSort     = 11;//¿Í»§¶Ë¹¦ÄÜ½çÃæÅÅÐò
	EModuleOldFlag_ClientHire     = 12;//¿Í»§¶Ë³é¿¨Îä½«Ä£ÐÍµÄ×îµÍÆ·ÖÊÒªÇó
	EModuleOldFlag_Max            = 13;

}
enum EPrivilegeCard
{
	EPrivilegeCard_None          = 0;
	EPrivilegeCard_Ice           = 1;
	EPrivilegeCard_Purple        = 2;
	EPrivilegeCard_Yellow        = 3;
	EPrivilegeCard_All           = 4;
	EPrivilegeCard_Max           = 5;
}
enum EPrivilege
{
	EPrivilege_None              = 0;
	EPrivilege_SigninReward      = 1;
	EPrivilege_ExploitsAddPer    = 2;
	EPrivilege_ArenaExpAddPer    = 3;
	EPrivilege_MapExpAddPer      = 4;
	EPrivilege_RobExpAddPer      = 5;
	EPrivilege_OfflineExp        = 6;
	EPrivilege_FreeBackSource    = 7;
	EPrivilege_ArenaCashAddPer   = 8;
	EPrivilege_MapCashAddPer     = 9;
	EPrivilege_RobCashAddPer     = 10;
	EPrivilege_StrengEquip5      = 11;
	EPrivilege_StrengEquip10     = 12;
	EPrivilege_StrengEquip20     = 13;
	EPrivilege_RaidCashAddPer    = 14;
	EPrivilege_Battle            = 15;
	EPrivilege_Max               = 32;
}
